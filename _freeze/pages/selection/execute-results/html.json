{
  "hash": "6e7225b8b617d762ff12dff16da5b2e0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Variable Selection and Regression\"\nformat:\n  html:\n    fig-dpi: 200\neditor_options: \n  chunk_output_type: console\nwarnings: false\n---\n\n::: {.cell warnings='false'}\n\n:::\n\n\n\nOn this page we will take our min-max normalized, geometrically averaged scores, which look like the most reliable and approachable so far, and take a deeper dive into variable selection, regression, and PCA. From the dimension meetings, it sounds like we may have some indicators with a couple of metrics, and potentially others with dozens. Because of this, and because of our focus on developing sensible indicators, I think it will be best to do any weighting at the indicator level or above. This also reduces our variable count substantially in relation to our state count of 51, opening more doors for PCA.\n\nIt is worth emphasizing at the top that the metrics that are making up this secondary data framework are not a great representation of the system. There are some important holes, as well as a heap of metrics that are serving as rather uninspiring proxies. So, extrapolation of these results beyond the confines of the exercise is not recommended. The purpose here is to explore strengths and tradeoffs in methods for aggregating the data. As primary data come in and make up the bulk of the framework and secondary data are used to fill in the gaps, this should start becoming more interpretable. \n\n# Wrangling\n\nFirst we will combine our indicator, index, and dimension values into one data frame to work with.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load data\nscores <- readRDS('data/state_score_iterations.rds')\nnames(scores)\n\n# Pull from raw minmax geometric\nraw_minmax_geo <- scores$raw_minmax_geometric\nget_str(raw_minmax_geo, 3)\n\n# Rename columns to specify what level of framework they are\n# then combine them into a single DF\n# and remove the aggregate US or NewEng rows\ndat <- imap(raw_minmax_geo, ~ {\n  new_names <- c(\n    paste0(\n      str_sub(.y, end = 5),\n      '_',\n      names(.x[-length(.x)])\n    ),\n    'state'\n  )\n  .x %>% \n    setNames(c(new_names))\n}) %>% \n  reduce(inner_join) %>% \n  select(state, everything()) %>% \n  filter(str_detect(state, '_', negate = TRUE))\nget_str(dat)\n\n# Save this for later use elsewhere\nsaveRDS(dat, 'data/raw_minmax_geo.rds')\n\n# Get filtered frame, which shows which indicators belong to which dimensions\nframework <- readRDS('data/filtered_frame.rds')\n```\n:::\n\n\n\n# PCA\n\n## Component Extraction\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter down to just indicators for PCA\npca_dat <- dat %>% \n  select(starts_with('indic')) %>% \n  setNames(c(str_remove(names(.), 'indic_'))) %>% \n  as.data.frame()\n# get_str(pca_dat)\n\n# Explore how many factors to extract\nVSS(pca_dat, n = 8, fm = 'pc', rotate = 'Promax')\n```\n\n::: {.cell-output-display}\n![](selection_files/figure-html/extraction-1.png){width=1400}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nVery Simple Structure\nCall: vss(x = x, n = n, rotate = rotate, diagonal = diagonal, fm = fm, \n    n.obs = n.obs, plot = plot, title = title, use = use, cor = cor)\nVSS complexity 1 achieves a maximimum of 0.53  with  2  factors\nVSS complexity 2 achieves a maximimum of 0.75  with  3  factors\n\nThe Velicer MAP achieves a minimum of 0.04  with  6  factors \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nBIC achieves a minimum of  Inf  with    factors\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSample Size adjusted BIC achieves a minimum of  Inf  with    factors\n\nStatistics by number of factors \n  vss1 vss2   map dof chisq prob sqresid  fit RMSEA BIC SABIC complex eChisq\n1 0.42 0.00 0.069   0    NA   NA    85.4 0.42    NA  NA    NA      NA     NA\n2 0.53 0.67 0.059   0    NA   NA    48.6 0.67    NA  NA    NA      NA     NA\n3 0.53 0.75 0.055   0    NA   NA    30.7 0.79    NA  NA    NA      NA     NA\n4 0.53 0.75 0.046   0    NA   NA    19.6 0.87    NA  NA    NA      NA     NA\n5 0.47 0.73 0.039   0    NA   NA    13.2 0.91    NA  NA    NA      NA     NA\n6 0.48 0.73 0.039   0    NA   NA    10.5 0.93    NA  NA    NA      NA     NA\n7 0.46 0.72 0.041   0    NA   NA     8.5 0.94    NA  NA    NA      NA     NA\n8 0.47 0.68 0.040   0    NA   NA     6.5 0.96    NA  NA    NA      NA     NA\n  SRMR eCRMS eBIC\n1   NA    NA   NA\n2   NA    NA   NA\n3   NA    NA   NA\n4   NA    NA   NA\n5   NA    NA   NA\n6   NA    NA   NA\n7   NA    NA   NA\n8   NA    NA   NA\n```\n\n\n:::\n\n```{.r .cell-code}\nset.seed(42)\nfa.parallel(pca_dat, fm = 'ml')\n```\n\n::: {.cell-output-display}\n![](selection_files/figure-html/extraction-2.png){width=1400}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nParallel analysis suggests that the number of factors =  5  and the number of components =  5 \n```\n\n\n:::\n:::\n\n\n\nMAP suggests 6, VSS 2 or 3, PA suggests 5. Not half bad. I think we are justified to go with 5.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Oblique rotations: promax, oblimin, simplimax, cluster\nrotations <- c(\n  'Promax',\n  'oblimin',\n  'simplimax',\n  'cluster'\n)\npca_outs <- map(rotations, ~ {\n  pca_dat %>% \n    # scale() %>% \n    pca(nfactors = 5, rotate = .x)\n}) %>% \n  setNames(c(rotations))\n\n# Save a version of promax for preso?\npng(\n  filename = 'preso/plots/scree.png',\n  width = 800,\n  height = 600,\n  units = 'px',\n  res = 150\n)\nplot(\n  pca_outs$simplimax$values,\n  xlab = 'Number of Components',\n  ylab = 'Eigen Values'\n)\nabline(h = 1)\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npng \n  2 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Now actually show it \nplot(\n  pca_outs$simplimax$values,\n  xlab = 'Number of Components',\n  ylab = 'Eigen Values'\n)\n```\n\n::: {.cell-output-display}\n![](selection_files/figure-html/scree-1.png){width=1400}\n:::\n:::\n\n\n\nThe scree plot makes a reasonably convincing case for 5 components, as the slope falls off substantially after the fifth.\n\n## Run PCA\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npca_tables <- map(pca_outs, ~ {\n  .x$loadings %>% \n    unclass() %>% \n    as.data.frame() %>% \n    select(order(colnames(.))) %>%\n    mutate(\n      across(everything(), ~ round(.x, 3)),\n      across(everything(), ~ case_when(\n        .x < 0.20 ~ '',\n        .x >= 0.20 & .x < 0.32 ~ '.',\n        .x >= 0.32 ~ as.character(.x),\n        .default = NA\n      ))\n    ) %>% \n    rownames_to_column() %>% \n    rename(indicator = 1) %>% \n    mutate(\n      dimension = framework$dimension[match(indicator, framework$indicator)]\n    ) %>% \n    select(indicator, dimension, everything())\n})\nget_str(pca_tables)  \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 4\n $ Promax   :'data.frame':\t38 obs. of  7 variables:\n  ..$ indicator: chr [1:38] \"access to land\" \"wealth/income distribution\" \"in\"..\n  ..$ dimension: chr [1:38] \"economics\" \"economics\" \"economics\" \"economics\" \"\"..\n  ..$ RC1      : chr [1:38] \"\" \"\" \"1.013\" \"\" \"\" \"\" \".\" \"0.731\" \"\" \"\" \"\" \"\" \"\"\"..\n  ..$ RC2      : chr [1:38] \"\" \"0.78\" \".\" \".\" \"\" \".\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"..\n  ..$ RC3      : chr [1:38] \"\" \"\" \"\" \"0.414\" \"\" \"\" \"0.653\" \"\" \"0.825\" \".\" \"\" \"..\n  ..$ RC4      : chr [1:38] \"\" \"\" \"\" \"\" \"\" \".\" \"\" \"\" \"\" \"0.482\" \"\" \"0.723\" \"0\"..\n  ..$ RC5      : chr [1:38] \".\" \"\" \".\" \"0.357\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"..\n $ oblimin  :'data.frame':\t38 obs. of  7 variables:\n  ..$ indicator: chr [1:38] \"access to land\" \"wealth/income distribution\" \"in\"..\n  ..$ dimension: chr [1:38] \"economics\" \"economics\" \"economics\" \"economics\" \"\"..\n  ..$ TC1      : chr [1:38] \"\" \"\" \"0.927\" \"\" \"\" \"\" \".\" \"0.715\" \"\" \"\" \"\" \"\" \"\"\"..\n  ..$ TC2      : chr [1:38] \"\" \"0.757\" \".\" \".\" \"\" \"0.427\" \"\" \"\" \"\" \"\" \"\" \"\" \"\"..\n  ..$ TC3      : chr [1:38] \".\" \"\" \"\" \"0.452\" \".\" \"\" \"0.605\" \"\" \"0.824\" \"\" \".\"..\n  ..$ TC4      : chr [1:38] \"\" \"\" \"\" \"\" \"\" \"\" \".\" \"\" \"\" \"0.677\" \"\" \"0.805\" \"0\"..\n  ..$ TC5      : chr [1:38] \".\" \"\" \".\" \"0.365\" \"\" \".\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\"\"..\n $ simplimax:'data.frame':\t38 obs. of  7 variables:\n  ..$ indicator: chr [1:38] \"access to land\" \"wealth/income distribution\" \"in\"..\n  ..$ dimension: chr [1:38] \"economics\" \"economics\" \"economics\" \"economics\" \"\"..\n  ..$ TC1      : chr [1:38] \"0.448\" \"0.43\" \"\" \"0.78\" \"\" \"0.816\" \"\" \"\" \"0.442\"\"..\n  ..$ TC2      : chr [1:38] \"\" \"0.621\" \".\" \"\" \"\" \"\" \".\" \"0.508\" \"0.336\" \"\" \"\"\"..\n  ..$ TC3      : chr [1:38] \"\" \"\" \"\" \".\" \"\" \"\" \"0.539\" \"\" \"0.482\" \"0.464\" \"\" \"..\n  ..$ TC4      : chr [1:38] \"\" \"\" \"\" \"\" \"0.486\" \"\" \".\" \"\" \"0.456\" \".\" \"0.598\"\"..\n  ..$ TC5      : chr [1:38] \"\" \"\" \"\" \"\" \"\" \".\" \"\" \"\" \"\" \"0.511\" \"\" \"0.589\" \"0\"..\n $ cluster  :'data.frame':\t38 obs. of  7 variables:\n  ..$ indicator: chr [1:38] \"access to land\" \"wealth/income distribution\" \"in\"..\n  ..$ dimension: chr [1:38] \"economics\" \"economics\" \"economics\" \"economics\" \"\"..\n  ..$ RC1      : chr [1:38] \".\" \"\" \"\" \"0.44\" \"\" \"0.791\" \"\" \"\" \"\" \"\" \"\" \".\" \".\"..\n  ..$ RC2      : chr [1:38] \"\" \"0.751\" \".\" \".\" \"\" \".\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\"\"..\n  ..$ RC3      : chr [1:38] \"\" \"\" \"\" \"0.389\" \"\" \"\" \"0.648\" \"\" \"0.824\" \".\" \"\" \"..\n  ..$ RC4      : chr [1:38] \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"0.427\" \"\" \"0.638\" \"0.\"..\n  ..$ RC5      : chr [1:38] \"\" \"\" \"0.33\" \".\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\"\"..\n```\n\n\n:::\n\n```{.r .cell-code}\n# Save it for preso\nsaveRDS(pca_tables, 'preso/data/pca_tables.rds')\n```\n:::\n\n::: {.cell class='centered'}\n\n```{.r .cell-code}\nget_reactable(pca_tables$simplimax)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"reactable html-widget html-fill-item\" id=\"htmlwidget-564e894433c987abfd45\" style=\"width:auto;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-564e894433c987abfd45\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"indicator\":[\"access to land\",\"wealth/income distribution\",\"income stability\",\"operations diversification\",\"use of ag/farm/crop insurance\",\"carbon fluxes\",\"carbon stocks\",\"embodied carbon\",\"forest health\",\"biodiversity\",\"land use diversity\",\"sensitive or rare habitats\",\"water quality\",\"water quantity\",\"educational attainment\",\"access to culturally appropriate food\",\"dietary quality\",\"food access\",\"food affordability\",\"mental health tbd\",\"access to care\",\"housing supply and quality\",\"physical health tbd\",\"total quantity exported\",\"production species diversity\",\"production inputs\",\"total quantity food products\",\"total quantity forest products\",\"total quantity non-food ag products\",\"value added market\",\"crop failure\",\"social connectedness\",\"community safety\",\"diverse representation\",\"age diversity\",\"gender diversity\",\"racial diversity\",\"participatory governance\"],\"dimension\":[\"economics\",\"economics\",\"economics\",\"economics\",\"economics\",\"environment\",\"environment\",\"environment\",\"environment\",\"environment\",\"environment\",\"environment\",\"environment\",\"environment\",\"health\",\"health\",\"health\",\"health\",\"health\",\"health\",\"health\",\"health\",\"health\",\"production\",\"production\",\"production\",\"production\",\"production\",\"production\",\"production\",\"production\",\"social\",\"social\",\"social\",\"social\",\"social\",\"social\",\"social\"],\"TC1\":[\"0.448\",\"0.43\",\"\",\"0.78\",\"\",\"0.816\",\"\",\"\",\"0.442\",\"\",\"\",\"\",\".\",\"\",\"0.427\",\"0.577\",\"0.328\",\"\",\"0.464\",\"0.508\",\"0.519\",\"\",\"0.414\",\"\",\"\",\"0.559\",\"\",\"\",\"\",\"0.776\",\"0.607\",\".\",\"\",\"\",\"\",\"0.551\",\"\",\"0.357\"],\"TC2\":[\"\",\"0.621\",\".\",\"\",\"\",\"\",\".\",\"0.508\",\"0.336\",\"\",\"\",\"\",\"\",\"\",\"0.564\",\"\",\"\",\"0.429\",\"0.501\",\".\",\"0.679\",\"0.549\",\"0.727\",\"0.442\",\"\",\"\",\"0.455\",\"\",\"\",\"\",\"\",\"0.882\",\"\",\"\",\"0.588\",\"\",\"\",\"0.601\"],\"TC3\":[\"\",\"\",\"\",\".\",\"\",\"\",\"0.539\",\"\",\"0.482\",\"0.464\",\"\",\"0.567\",\"0.591\",\"\",\".\",\"0.377\",\"0.487\",\"0.584\",\"\",\"0.495\",\"\",\"\",\"\",\"\",\"0.416\",\"\",\"\",\"0.526\",\"0.421\",\"0.458\",\"\",\"\",\".\",\"\",\"\",\"0.335\",\"0.374\",\"\"],\"TC4\":[\"\",\"\",\"\",\"\",\"0.486\",\"\",\".\",\"\",\"0.456\",\".\",\"0.598\",\"\",\".\",\"0.349\",\"\",\"\",\".\",\".\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"0.632\",\".\",\"\",\".\",\"\",\"0.374\",\"\",\".\",\"\",\"\",\"\"],\"TC5\":[\"\",\"\",\"\",\"\",\"\",\".\",\"\",\"\",\"\",\"0.511\",\"\",\"0.589\",\"0.458\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"0.513\",\"\",\"\",\"\",\"0.362\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"0.336\",\"\",\"0.392\"]},\"columns\":[{\"id\":\"indicator\",\"name\":\"indicator\",\"type\":\"character\"},{\"id\":\"dimension\",\"name\":\"dimension\",\"type\":\"character\"},{\"id\":\"TC1\",\"name\":\"TC1\",\"type\":\"character\"},{\"id\":\"TC2\",\"name\":\"TC2\",\"type\":\"character\"},{\"id\":\"TC3\",\"name\":\"TC3\",\"type\":\"character\"},{\"id\":\"TC4\",\"name\":\"TC4\",\"type\":\"character\"},{\"id\":\"TC5\",\"name\":\"TC5\",\"type\":\"character\"}],\"resizable\":true,\"filterable\":true,\"searchable\":true,\"defaultPageSize\":10,\"showPageSizeOptions\":true,\"onClick\":\"select\",\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"style\":{\"fontSize\":\"14px\"},\"dataKey\":\"3e808ef7b836478cf6f45ecce30d401f\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\nAdd interpretation here []\n\n# Regression\n\nNow that we have a preliminary framework and set of scores, we can try regressing our dimension scores onto our indicators to see which indicators are the most highly associated with dimensions. We can use this information to help inform weighting. Since we have more indicators per dimension than are easy to interpret, we will use variable selection procedures with GLMnet and Random Forest regressions.\n\n## Economics\n\n### Linear Model\n\nFirst we can try a plain old linear model to see how economics loads onto its indicators.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Reduce data down to dimen_economics and all indicators\necon_dat <- select(dat, dimen_economics, starts_with('indic')) %>% \n  setNames(c(names(.) %>% str_remove('indic_|dimen_')))\nget_str(econ_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nrowws_df [50 × 39] (S3: rowwise_df/tbl_df/tbl/data.frame)\n $ economics                            : num [1:50] 0.186 0.299 0.183 0.207 0..\n $ access to land                       : num [1:50] 0.363 0.219 0.198 0.435 0..\n $ wealth/income distribution           : num [1:50] 0.275 0.684 0.373 0.328 0..\n $ income stability                     : num [1:50] 0.08724 0.06626 0.20328 0..\n $ operations diversification           : num [1:50] 0.013147 0.39392 0.05679 ..\n $ use of ag/farm/crop insurance        : num [1:50] 0.2314 0.21962 0 0.29855 ..\n $ carbon fluxes                        : num [1:50] 0.346 0.751 0.879 0.436 0..\n $ carbon stocks                        : num [1:50] 0.1654 0.3674 0.0185 0.32..\n $ embodied carbon                      : num [1:50] 0.05821 0.00615 0.06465 0..\n $ forest health                        : num [1:50] 0.25 0.4275 0.1041 0.3586..\n $ biodiversity                         : num [1:50] 0.572 0.298 0.574 0.489 0..\n $ land use diversity                   : num [1:50] 0.954307 0.587913 0.29319..\n $ sensitive or rare habitats           : num [1:50] 0.642 0.7319 0.6918 0.419..\n $ water quality                        : num [1:50] 0.581 0.585 0.449 0.454 0..\n $ water quantity                       : num [1:50] 0.712 0.915 0.42 0.791 0...\n $ educational attainment               : num [1:50] 0.2323 0.4223 0.4479 0.15..\n $ access to culturally appropriate food: num [1:50] 0.1563 0.3824 0.0818 0.07..\n $ dietary quality                      : num [1:50] 0.36 0.352 0.352 0.768 0...\n $ food access                          : num [1:50] 0.1684 0.2286 0.1061 0.12..\n $ food affordability                   : num [1:50] 0.498 0.526 0.35 0.172 0...\n $ mental health tbd                    : num [1:50] 0.352 0.34 0.312 0.339 0...\n $ access to care                       : num [1:50] 0.198 0.435 0.313 0.247 0..\n $ housing supply and quality           : num [1:50] 0.621 0.616 0.633 0.536 0..\n $ physical health tbd                  : num [1:50] 0.274 0.585 0.507 0.377 0..\n $ total quantity exported              : num [1:50] 0.068031 0 0.068105 0.174..\n $ production species diversity         : num [1:50] 0.5496 0.2917 0.6537 0.37..\n $ production inputs                    : num [1:50] 0.8 1 0.619 0.305 0.533 0..\n $ total quantity food products         : num [1:50] 0.107721 0.000613 0.07753..\n $ total quantity forest products       : num [1:50] 0.635061 0.000087 0.00048..\n $ total quantity non-food ag products  : num [1:50] 0.19143 0.00143 0.02043 0..\n $ value added market                   : num [1:50] 0.01481 0.30841 0.04466 0..\n $ crop failure                         : num [1:50] 0.95 1 0.967 0.391 0.636 ..\n $ social connectedness                 : num [1:50] 0.417 0.406 0.314 0.388 0..\n $ community safety                     : num [1:50] 0.749 0.384 0.896 0.677 0..\n $ diverse representation               : num [1:50] 0.45 0.53 0.638 0.34 0.41..\n $ age diversity                        : num [1:50] 0.3774 0.7547 0.1132 0.58..\n $ gender diversity                     : num [1:50] 0.274 0.9229 1 0.4825 0.4..\n $ racial diversity                     : num [1:50] 0.28454 0.34292 0.82326 0..\n $ participatory governance             : num [1:50] 0.3192 0.514 0.4967 0.011..\n```\n\n\n:::\n\n```{.r .cell-code}\nlm <- lm(economics ~ ., data = econ_dat)\nsummary(lm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = economics ~ ., data = econ_dat)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.028597 -0.008780 -0.001355  0.009435  0.033763 \n\nCoefficients:\n                                         Estimate Std. Error t value Pr(>|t|)\n(Intercept)                             -0.129261   0.177775  -0.727  0.48235\n`access to land`                         0.407912   0.159224   2.562  0.02643\n`wealth/income distribution`             0.264800   0.100376   2.638  0.02307\n`income stability`                       0.007812   0.108346   0.072  0.94381\n`operations diversification`            -0.080939   0.071452  -1.133  0.28140\n`use of ag/farm/crop insurance`          0.104228   0.027921   3.733  0.00331\n`carbon fluxes`                          0.024741   0.071354   0.347  0.73533\n`carbon stocks`                          0.031166   0.117489   0.265  0.79571\n`embodied carbon`                        0.090569   0.125130   0.724  0.48430\n`forest health`                          0.007066   0.162326   0.044  0.96606\nbiodiversity                             0.019697   0.181185   0.109  0.91539\n`land use diversity`                     0.030419   0.042042   0.724  0.48445\n`sensitive or rare habitats`            -0.060387   0.089124  -0.678  0.51205\n`water quality`                          0.040110   0.076031   0.528  0.60829\n`water quantity`                        -0.006883   0.076736  -0.090  0.93014\n`educational attainment`                 0.053691   0.096731   0.555  0.58997\n`access to culturally appropriate food` -0.071258   0.123987  -0.575  0.57704\n`dietary quality`                       -0.029778   0.067903  -0.439  0.66949\n`food access`                            0.082575   0.128307   0.644  0.53304\n`food affordability`                    -0.085322   0.095028  -0.898  0.38849\n`mental health tbd`                     -0.216905   0.162632  -1.334  0.20926\n`access to care`                         0.059387   0.180315   0.329  0.74808\n`housing supply and quality`             0.087502   0.125383   0.698  0.49974\n`physical health tbd`                   -0.161052   0.165392  -0.974  0.35111\n`total quantity exported`                0.343059   0.163633   2.097  0.05996\n`production species diversity`           0.063850   0.066954   0.954  0.36075\n`production inputs`                      0.055077   0.053327   1.033  0.32386\n`total quantity food products`          -0.315811   0.207882  -1.519  0.15692\n`total quantity forest products`         0.039438   0.057882   0.681  0.50974\n`total quantity non-food ag products`   -0.005035   0.081416  -0.062  0.95180\n`value added market`                     0.319651   0.115996   2.756  0.01870\n`crop failure`                          -0.011586   0.090693  -0.128  0.90065\n`social connectedness`                  -0.049821   0.083092  -0.600  0.56093\n`community safety`                      -0.030003   0.039398  -0.762  0.46235\n`diverse representation`                 0.011552   0.040475   0.285  0.78063\n`age diversity`                          0.035801   0.059580   0.601  0.56009\n`gender diversity`                       0.061339   0.092878   0.660  0.52257\n`racial diversity`                       0.073204   0.099326   0.737  0.47655\n`participatory governance`               0.064864   0.066379   0.977  0.34948\n                                          \n(Intercept)                               \n`access to land`                        * \n`wealth/income distribution`            * \n`income stability`                        \n`operations diversification`              \n`use of ag/farm/crop insurance`         **\n`carbon fluxes`                           \n`carbon stocks`                           \n`embodied carbon`                         \n`forest health`                           \nbiodiversity                              \n`land use diversity`                      \n`sensitive or rare habitats`              \n`water quality`                           \n`water quantity`                          \n`educational attainment`                  \n`access to culturally appropriate food`   \n`dietary quality`                         \n`food access`                             \n`food affordability`                      \n`mental health tbd`                       \n`access to care`                          \n`housing supply and quality`              \n`physical health tbd`                     \n`total quantity exported`               . \n`production species diversity`            \n`production inputs`                       \n`total quantity food products`            \n`total quantity forest products`          \n`total quantity non-food ag products`     \n`value added market`                    * \n`crop failure`                            \n`social connectedness`                    \n`community safety`                        \n`diverse representation`                  \n`age diversity`                           \n`gender diversity`                        \n`racial diversity`                        \n`participatory governance`                \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.02723 on 11 degrees of freedom\nMultiple R-squared:  0.9703,\tAdjusted R-squared:  0.8677 \nF-statistic: 9.461 on 38 and 11 DF,  p-value: 0.0001723\n```\n\n\n:::\n:::\n\n\n\nWe can see that most of the economics indicators (access to land, wealth and income distribution, income stability) are significant predictors, while operations diversification is close. But some surprises are access to culturally appropriate food (school food authorities serving culturally relevant food), housing supply and quality, as well as a few production indicators, like richness (crop diversity), production inputs, and value-added markets. Social connectedness from the social dimension also makes it on the list. The largest coefficients by a wide margin are for access to land and wealth and income distribution.\n\n### Splitting Data\n\nHere we split out data into a 60/40 training/test set for cross validation with GLMnet and Random Forest models. Note that we are pushing the limits of our sample size. But this should help protect against overfitting.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(\n  caret,\n  ranger,\n  glmnet\n)\n\n# Split data 60/40\nset.seed(42)\nindices <- createDataPartition(econ_dat$economics, p = 0.60, list = FALSE)\ntraining_data <- econ_dat[indices, ]\ntesting_data <- econ_dat[-indices,]\n\nmy_folds <- createFolds(training_data$economics, k = 5, list = TRUE)\n\n# Control\nmy_control <- trainControl(\n  method = 'cv',\n  number = 5,\n  verboseIter = TRUE,\n  index = my_folds\n)\n\n# Check for zero variance or near zero variance indicators\nnearZeroVar(dat, names = TRUE, saveMetrics = TRUE)\n# All clear\n```\n:::\n\n\n\n### GLMnet\n\nHere we use a GLMnet to find an optimal balance between a ridge regression, which penalizes variables based on the magnitude of coefficients, and lasso regression, which adds a penalty based on the absolute value of coefficients. We use a tuning grid to find optimal values of alpha (0 = ridge, 1 = lasso) and lambda (the penalty parameter). Both this and the random forest model are particularly good at prediction, but also provide a metric for variable importance that can help us interpret our indicators.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\necon_glmnet <- train(\n  economics ~ .,\n  data = training_data, \n  tuneGrid = expand.grid(\n    alpha = seq(0.1, 1, length = 5),\n    lambda = seq(0.0001, 0.1, length = 100)\n  ),\n  method = \"glmnet\",\n  trControl = my_control,\n  preProcess = c('zv', 'center', 'scale')\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n+ Fold1: alpha=0.100, lambda=0.1 \n- Fold1: alpha=0.100, lambda=0.1 \n+ Fold1: alpha=0.325, lambda=0.1 \n- Fold1: alpha=0.325, lambda=0.1 \n+ Fold1: alpha=0.550, lambda=0.1 \n- Fold1: alpha=0.550, lambda=0.1 \n+ Fold1: alpha=0.775, lambda=0.1 \n- Fold1: alpha=0.775, lambda=0.1 \n+ Fold1: alpha=1.000, lambda=0.1 \n- Fold1: alpha=1.000, lambda=0.1 \n+ Fold2: alpha=0.100, lambda=0.1 \n- Fold2: alpha=0.100, lambda=0.1 \n+ Fold2: alpha=0.325, lambda=0.1 \n- Fold2: alpha=0.325, lambda=0.1 \n+ Fold2: alpha=0.550, lambda=0.1 \n- Fold2: alpha=0.550, lambda=0.1 \n+ Fold2: alpha=0.775, lambda=0.1 \n- Fold2: alpha=0.775, lambda=0.1 \n+ Fold2: alpha=1.000, lambda=0.1 \n- Fold2: alpha=1.000, lambda=0.1 \n+ Fold3: alpha=0.100, lambda=0.1 \n- Fold3: alpha=0.100, lambda=0.1 \n+ Fold3: alpha=0.325, lambda=0.1 \n- Fold3: alpha=0.325, lambda=0.1 \n+ Fold3: alpha=0.550, lambda=0.1 \n- Fold3: alpha=0.550, lambda=0.1 \n+ Fold3: alpha=0.775, lambda=0.1 \n- Fold3: alpha=0.775, lambda=0.1 \n+ Fold3: alpha=1.000, lambda=0.1 \n- Fold3: alpha=1.000, lambda=0.1 \n+ Fold4: alpha=0.100, lambda=0.1 \n- Fold4: alpha=0.100, lambda=0.1 \n+ Fold4: alpha=0.325, lambda=0.1 \n- Fold4: alpha=0.325, lambda=0.1 \n+ Fold4: alpha=0.550, lambda=0.1 \n- Fold4: alpha=0.550, lambda=0.1 \n+ Fold4: alpha=0.775, lambda=0.1 \n- Fold4: alpha=0.775, lambda=0.1 \n+ Fold4: alpha=1.000, lambda=0.1 \n- Fold4: alpha=1.000, lambda=0.1 \n+ Fold5: alpha=0.100, lambda=0.1 \n- Fold5: alpha=0.100, lambda=0.1 \n+ Fold5: alpha=0.325, lambda=0.1 \n- Fold5: alpha=0.325, lambda=0.1 \n+ Fold5: alpha=0.550, lambda=0.1 \n- Fold5: alpha=0.550, lambda=0.1 \n+ Fold5: alpha=0.775, lambda=0.1 \n- Fold5: alpha=0.775, lambda=0.1 \n+ Fold5: alpha=1.000, lambda=0.1 \n- Fold5: alpha=1.000, lambda=0.1 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAggregating results\nSelecting tuning parameters\nFitting alpha = 1, lambda = 0.0758 on full training set\n```\n\n\n:::\n\n```{.r .cell-code}\nimportance <- varImp(econ_glmnet, scale = TRUE)\nplot(importance)\n```\n\n::: {.cell-output-display}\n![](selection_files/figure-html/econ_glmnet-1.png){width=1400}\n:::\n\n```{.r .cell-code}\n# Predict\n# p <- predict(econ_glmnet, testing_data)\n# postResample(pred = p, obs = testing_data$economics)\n```\n:::\n\n\n\nThe optimal hyperparameters from the tuning grid were alpha = 0.1 (mostly ridge regression) and lambda = 0.00313. The variable importance plot is on a relative scale of 0 (unimportant) to 100 (most important) in terms of predictive power. Curiously, it is showing that the value added market indicator from the production dimension is a better predictor of economics than any economics indicator.\n\n### Random Forest\n\nNow we can try a random forest, which is particularly good at handling non-linear relationships. Here we use the RMSE to determine the optimal combination of mtry (the number of variables selected at each node in the decision tree), the split rule, and the minimum node size.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\necon_rf <- train(\n  economics ~ .,\n  data = training_data, \n  tuneLength = 7,\n  method = \"ranger\",\n  trControl = my_control,\n  importance = 'impurity'\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n+ Fold1: mtry= 2, min.node.size=5, splitrule=variance \n- Fold1: mtry= 2, min.node.size=5, splitrule=variance \n+ Fold1: mtry= 8, min.node.size=5, splitrule=variance \n- Fold1: mtry= 8, min.node.size=5, splitrule=variance \n+ Fold1: mtry=14, min.node.size=5, splitrule=variance \n- Fold1: mtry=14, min.node.size=5, splitrule=variance \n+ Fold1: mtry=20, min.node.size=5, splitrule=variance \n- Fold1: mtry=20, min.node.size=5, splitrule=variance \n+ Fold1: mtry=26, min.node.size=5, splitrule=variance \n- Fold1: mtry=26, min.node.size=5, splitrule=variance \n+ Fold1: mtry=32, min.node.size=5, splitrule=variance \n- Fold1: mtry=32, min.node.size=5, splitrule=variance \n+ Fold1: mtry=38, min.node.size=5, splitrule=variance \n- Fold1: mtry=38, min.node.size=5, splitrule=variance \n+ Fold1: mtry= 2, min.node.size=5, splitrule=extratrees \n- Fold1: mtry= 2, min.node.size=5, splitrule=extratrees \n+ Fold1: mtry= 8, min.node.size=5, splitrule=extratrees \n- Fold1: mtry= 8, min.node.size=5, splitrule=extratrees \n+ Fold1: mtry=14, min.node.size=5, splitrule=extratrees \n- Fold1: mtry=14, min.node.size=5, splitrule=extratrees \n+ Fold1: mtry=20, min.node.size=5, splitrule=extratrees \n- Fold1: mtry=20, min.node.size=5, splitrule=extratrees \n+ Fold1: mtry=26, min.node.size=5, splitrule=extratrees \n- Fold1: mtry=26, min.node.size=5, splitrule=extratrees \n+ Fold1: mtry=32, min.node.size=5, splitrule=extratrees \n- Fold1: mtry=32, min.node.size=5, splitrule=extratrees \n+ Fold1: mtry=38, min.node.size=5, splitrule=extratrees \n- Fold1: mtry=38, min.node.size=5, splitrule=extratrees \n+ Fold2: mtry= 2, min.node.size=5, splitrule=variance \n- Fold2: mtry= 2, min.node.size=5, splitrule=variance \n+ Fold2: mtry= 8, min.node.size=5, splitrule=variance \n- Fold2: mtry= 8, min.node.size=5, splitrule=variance \n+ Fold2: mtry=14, min.node.size=5, splitrule=variance \n- Fold2: mtry=14, min.node.size=5, splitrule=variance \n+ Fold2: mtry=20, min.node.size=5, splitrule=variance \n- Fold2: mtry=20, min.node.size=5, splitrule=variance \n+ Fold2: mtry=26, min.node.size=5, splitrule=variance \n- Fold2: mtry=26, min.node.size=5, splitrule=variance \n+ Fold2: mtry=32, min.node.size=5, splitrule=variance \n- Fold2: mtry=32, min.node.size=5, splitrule=variance \n+ Fold2: mtry=38, min.node.size=5, splitrule=variance \n- Fold2: mtry=38, min.node.size=5, splitrule=variance \n+ Fold2: mtry= 2, min.node.size=5, splitrule=extratrees \n- Fold2: mtry= 2, min.node.size=5, splitrule=extratrees \n+ Fold2: mtry= 8, min.node.size=5, splitrule=extratrees \n- Fold2: mtry= 8, min.node.size=5, splitrule=extratrees \n+ Fold2: mtry=14, min.node.size=5, splitrule=extratrees \n- Fold2: mtry=14, min.node.size=5, splitrule=extratrees \n+ Fold2: mtry=20, min.node.size=5, splitrule=extratrees \n- Fold2: mtry=20, min.node.size=5, splitrule=extratrees \n+ Fold2: mtry=26, min.node.size=5, splitrule=extratrees \n- Fold2: mtry=26, min.node.size=5, splitrule=extratrees \n+ Fold2: mtry=32, min.node.size=5, splitrule=extratrees \n- Fold2: mtry=32, min.node.size=5, splitrule=extratrees \n+ Fold2: mtry=38, min.node.size=5, splitrule=extratrees \n- Fold2: mtry=38, min.node.size=5, splitrule=extratrees \n+ Fold3: mtry= 2, min.node.size=5, splitrule=variance \n- Fold3: mtry= 2, min.node.size=5, splitrule=variance \n+ Fold3: mtry= 8, min.node.size=5, splitrule=variance \n- Fold3: mtry= 8, min.node.size=5, splitrule=variance \n+ Fold3: mtry=14, min.node.size=5, splitrule=variance \n- Fold3: mtry=14, min.node.size=5, splitrule=variance \n+ Fold3: mtry=20, min.node.size=5, splitrule=variance \n- Fold3: mtry=20, min.node.size=5, splitrule=variance \n+ Fold3: mtry=26, min.node.size=5, splitrule=variance \n- Fold3: mtry=26, min.node.size=5, splitrule=variance \n+ Fold3: mtry=32, min.node.size=5, splitrule=variance \n- Fold3: mtry=32, min.node.size=5, splitrule=variance \n+ Fold3: mtry=38, min.node.size=5, splitrule=variance \n- Fold3: mtry=38, min.node.size=5, splitrule=variance \n+ Fold3: mtry= 2, min.node.size=5, splitrule=extratrees \n- Fold3: mtry= 2, min.node.size=5, splitrule=extratrees \n+ Fold3: mtry= 8, min.node.size=5, splitrule=extratrees \n- Fold3: mtry= 8, min.node.size=5, splitrule=extratrees \n+ Fold3: mtry=14, min.node.size=5, splitrule=extratrees \n- Fold3: mtry=14, min.node.size=5, splitrule=extratrees \n+ Fold3: mtry=20, min.node.size=5, splitrule=extratrees \n- Fold3: mtry=20, min.node.size=5, splitrule=extratrees \n+ Fold3: mtry=26, min.node.size=5, splitrule=extratrees \n- Fold3: mtry=26, min.node.size=5, splitrule=extratrees \n+ Fold3: mtry=32, min.node.size=5, splitrule=extratrees \n- Fold3: mtry=32, min.node.size=5, splitrule=extratrees \n+ Fold3: mtry=38, min.node.size=5, splitrule=extratrees \n- Fold3: mtry=38, min.node.size=5, splitrule=extratrees \n+ Fold4: mtry= 2, min.node.size=5, splitrule=variance \n- Fold4: mtry= 2, min.node.size=5, splitrule=variance \n+ Fold4: mtry= 8, min.node.size=5, splitrule=variance \n- Fold4: mtry= 8, min.node.size=5, splitrule=variance \n+ Fold4: mtry=14, min.node.size=5, splitrule=variance \n- Fold4: mtry=14, min.node.size=5, splitrule=variance \n+ Fold4: mtry=20, min.node.size=5, splitrule=variance \n- Fold4: mtry=20, min.node.size=5, splitrule=variance \n+ Fold4: mtry=26, min.node.size=5, splitrule=variance \n- Fold4: mtry=26, min.node.size=5, splitrule=variance \n+ Fold4: mtry=32, min.node.size=5, splitrule=variance \n- Fold4: mtry=32, min.node.size=5, splitrule=variance \n+ Fold4: mtry=38, min.node.size=5, splitrule=variance \n- Fold4: mtry=38, min.node.size=5, splitrule=variance \n+ Fold4: mtry= 2, min.node.size=5, splitrule=extratrees \n- Fold4: mtry= 2, min.node.size=5, splitrule=extratrees \n+ Fold4: mtry= 8, min.node.size=5, splitrule=extratrees \n- Fold4: mtry= 8, min.node.size=5, splitrule=extratrees \n+ Fold4: mtry=14, min.node.size=5, splitrule=extratrees \n- Fold4: mtry=14, min.node.size=5, splitrule=extratrees \n+ Fold4: mtry=20, min.node.size=5, splitrule=extratrees \n- Fold4: mtry=20, min.node.size=5, splitrule=extratrees \n+ Fold4: mtry=26, min.node.size=5, splitrule=extratrees \n- Fold4: mtry=26, min.node.size=5, splitrule=extratrees \n+ Fold4: mtry=32, min.node.size=5, splitrule=extratrees \n- Fold4: mtry=32, min.node.size=5, splitrule=extratrees \n+ Fold4: mtry=38, min.node.size=5, splitrule=extratrees \n- Fold4: mtry=38, min.node.size=5, splitrule=extratrees \n+ Fold5: mtry= 2, min.node.size=5, splitrule=variance \n- Fold5: mtry= 2, min.node.size=5, splitrule=variance \n+ Fold5: mtry= 8, min.node.size=5, splitrule=variance \n- Fold5: mtry= 8, min.node.size=5, splitrule=variance \n+ Fold5: mtry=14, min.node.size=5, splitrule=variance \n- Fold5: mtry=14, min.node.size=5, splitrule=variance \n+ Fold5: mtry=20, min.node.size=5, splitrule=variance \n- Fold5: mtry=20, min.node.size=5, splitrule=variance \n+ Fold5: mtry=26, min.node.size=5, splitrule=variance \n- Fold5: mtry=26, min.node.size=5, splitrule=variance \n+ Fold5: mtry=32, min.node.size=5, splitrule=variance \n- Fold5: mtry=32, min.node.size=5, splitrule=variance \n+ Fold5: mtry=38, min.node.size=5, splitrule=variance \n- Fold5: mtry=38, min.node.size=5, splitrule=variance \n+ Fold5: mtry= 2, min.node.size=5, splitrule=extratrees \n- Fold5: mtry= 2, min.node.size=5, splitrule=extratrees \n+ Fold5: mtry= 8, min.node.size=5, splitrule=extratrees \n- Fold5: mtry= 8, min.node.size=5, splitrule=extratrees \n+ Fold5: mtry=14, min.node.size=5, splitrule=extratrees \n- Fold5: mtry=14, min.node.size=5, splitrule=extratrees \n+ Fold5: mtry=20, min.node.size=5, splitrule=extratrees \n- Fold5: mtry=20, min.node.size=5, splitrule=extratrees \n+ Fold5: mtry=26, min.node.size=5, splitrule=extratrees \n- Fold5: mtry=26, min.node.size=5, splitrule=extratrees \n+ Fold5: mtry=32, min.node.size=5, splitrule=extratrees \n- Fold5: mtry=32, min.node.size=5, splitrule=extratrees \n+ Fold5: mtry=38, min.node.size=5, splitrule=extratrees \n- Fold5: mtry=38, min.node.size=5, splitrule=extratrees \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAggregating results\nSelecting tuning parameters\nFitting mtry = 2, splitrule = extratrees, min.node.size = 5 on full training set\n```\n\n\n:::\n\n```{.r .cell-code}\n# econ_rf\n# plot(econ_rf)\n\nimportance <- varImp(econ_rf, scale = TRUE)\nplot(importance)\n```\n\n::: {.cell-output-display}\n![](selection_files/figure-html/econ_rf-1.png){width=1400}\n:::\n\n```{.r .cell-code}\n# Predict\n# p <- predict(model_mf, testing_data)\n# postResample(pred = p, obs = testing_data$rebl_tpm)\n```\n:::\n\n\n\nThe random forest model is also picking out the value-added market indicator as the best predictor of economics dimension scores, followed closely by operations diversification, wealth and income distribution, and income stability.\n\nVery curious how value-added markets keep sticking out. The two metrics making up this indicator are both from NASS: the percentage of farms reporting value-added sales, and of those farms, the percentage of value-added sales out of total sales. \n\n# Next steps\n\nLots of directions to go from here, but the plan for now is:\n\n-   Far more visualization and exploration of indicator distributions and normalization methods. Show how VT specifically and New England as a whole compare to national averages in each dimension, index, and key indicators.\n-   Explore aggregation using PCA loadings as weights and compare this to our more simply aggregated current frameworks. Might make sense to try PCA within each dimension individually instead of all together, although doing them together does allow us to find unusual behavior of indicators.\n-   Continue regression analysis across other four dimensions to help inform indicator weighting. Consider trying double-censored tobit regression in place of the linear model [@gomez-limon2010EmpiricalEvaluationAgricultural].\n-   Sensitivity analysis - quantify the effect of different normalization, aggregation methods. Bootstrap confidence intervals around dimension scores. Quantify effect of changing the number of metrics under each indicator. \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/core-js-2.5.3/shim.min.js\"></script>\n<script src=\"../site_libs/react-18.2.0/react.min.js\"></script>\n<script src=\"../site_libs/react-18.2.0/react-dom.min.js\"></script>\n<script src=\"../site_libs/reactwidget-2.0.0/react-tools.js\"></script>\n<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../site_libs/reactable-0.4.4/reactable.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/reactable-binding-0.4.4/reactable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}