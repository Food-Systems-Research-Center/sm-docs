{
  "hash": "a8c97af63cf4a02c5b664db459a6a5f1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Validation\"\nformat:\n  html:\n    fig-dpi: 200\neditor_options: \n  chunk_output_type: console\nwarnings: false\n---\n\n\n\n\n\n\n# Introduction\n\nHere we will use the raw + min max + geometric aggregation scores and see how they hold up to validation by external variables and by PCA.\n\nExternal variables:\n\n- Food Security Index (Feeding America, Map the Meal Gap)\n- Life expectancy, or premature age-adjusted mortality (UW County Health Rankings)\n- Food Environment Index (UW County Health Rankings)\n- Happiness Score (WalletHub - if anyone knows of a better metric for this, I'm all ears)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load sm_data\nsm_data <- readRDS('data/sm_data.rds')\n\n# Load state fips key to join other datasets\nstate_key <- sm_data[['state_key']] %>% \n  select(state, state_code)\n\n# Load cleaned aggregated data for all levels of regresion\nraw_minmax_geo <- readRDS('data/raw_minmax_geo.rds')\nget_str(raw_minmax_geo)\n\n# Reduce to just dimension scores, and remove prefix\ndimension_scores <- raw_minmax_geo %>% \n  select(state, starts_with('dimen')) %>% \n  setNames(c(str_remove(names(.), 'dimen_')))\nget_str(dimension_scores)\n\n# Pull validation variables out of sm_data, wrangle them to match metrics_df\n# Also including covariates, gdp and population\nvalidation_vars <- sm_data$metadata %>% \n  select(variable_name, metric, definition, source) %>% \n  filter(variable_name %in% c(\n    'foodInsecurity',\n    'communityEnvRank',\n    'happinessScore',\n    'wellbeingRank',\n    'workEnvRank',\n    'foodEnvironmentIndex',\n    'lifeExpectancy',\n    'population',\n    'gdpCurrent'\n  )) %>% \n  pull(variable_name)\nvalidation_vars  \n \n# Get subset of metrics for our validation variables, get latest year only\nvalidation_metrics <- sm_data$metrics %>% \n  filter(\n    variable_name %in% validation_vars, \n    !is.na(value), \n    str_length(fips) == 2\n  ) %>% \n  get_latest_year()\nget_str(validation_metrics)\n# All are available in 2024\n\n# Pivot wider, also get rid of trailing year\nvalidation_metrics <- validation_metrics %>% \n  pivot_wider(\n    id_cols = fips,\n    names_from = variable_name,\n    values_from = value\n  ) %>% \n  setNames(c(str_remove(names(.), '_[0-9]{4}'))) %>% \n  mutate(across(!fips, as.numeric))\nget_str(validation_metrics)\n# 00 US is missing a lot obviously\n# 11 DC is the other one with missing data\n# We will just filter down to 50 states to match metrics_df\n\n# Combine validation variables with our dimension scores using state key as the \n# bridge. Also remove DC (don't have validation metrics there)\nkey <- sm_data$state_key %>% \n  select(state, fips = state_code)\ndat <- dimension_scores %>% \n  left_join(key) %>% \n  left_join(validation_metrics) %>% \n  as.data.frame() %>% \n  filter(state != 'DC') %>% \n  select(-fips)\n\n# Make a GDP per capita variable from GDP real and population\n# It was already in millions to begin with\ndat <- dat %>% \n  mutate(gdp_per_cap = ((gdpCurrent / population) * 1e6) / 1000)\nget_str(dat)\n\n# Check it out\nget_str(dat)\nskimr::skim(dat)\n# Looks good\n\n# Save this for other pages\nsaveRDS(dat, 'data/metrics_df_with_vals_and_covars.rds')\n```\n:::\n\n\n\n\n# Regression\n\n## Food Insecurity\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm1 <- lm(\n  foodInsecurity ~ economics + environment + health + production + social,\n  data = dat\n)\n```\n:::\n\n::: {.cell class='stargazer-table'}\n\n<table style=\"text-align:center\"><tr><td colspan=\"4\" style=\"border-bottom: 1px solid black\"></td></tr><tr><td style=\"text-align:left\"></td><td colspan=\"3\"><em>Dependent variable:</em></td></tr>\n<tr><td></td><td colspan=\"3\" style=\"border-bottom: 1px solid black\"></td></tr>\n<tr><td style=\"text-align:left\"></td><td colspan=\"3\">Food Insecurity Index</td></tr>\n<tr><td style=\"text-align:left\"></td><td>Dimensions Only</td><td>With GDP per Capita</td><td>GDP and Pop. Weights</td></tr>\n<tr><td style=\"text-align:left\"></td><td>(1)</td><td>(2)</td><td>(3)</td></tr>\n<tr><td colspan=\"4\" style=\"border-bottom: 1px solid black\"></td></tr><tr><td style=\"text-align:left\">Constant</td><td>0.157<sup>***</sup> (0.126, 0.188)</td><td>0.162<sup>***</sup> (0.123, 0.202)</td><td>0.163<sup>***</sup> (0.128, 0.199)</td></tr>\n<tr><td style=\"text-align:left\">economics</td><td>-0.002 (-0.072, 0.069)</td><td>-0.005 (-0.077, 0.068)</td><td>-0.038 (-0.103, 0.027)</td></tr>\n<tr><td style=\"text-align:left\">environment</td><td>0.062 (0.001, 0.122)</td><td>0.059 (-0.003, 0.121)</td><td>0.034 (-0.025, 0.094)</td></tr>\n<tr><td style=\"text-align:left\">health</td><td>-0.185<sup>***</sup> (-0.257, -0.112)</td><td>-0.175<sup>***</sup> (-0.260, -0.089)</td><td>-0.187<sup>***</sup> (-0.270, -0.103)</td></tr>\n<tr><td style=\"text-align:left\">production</td><td>-0.012 (-0.058, 0.033)</td><td>-0.011 (-0.057, 0.036)</td><td>0.014 (-0.013, 0.041)</td></tr>\n<tr><td style=\"text-align:left\">social</td><td>0.012 (-0.058, 0.083)</td><td>0.011 (-0.061, 0.083)</td><td>-0.007 (-0.069, 0.055)</td></tr>\n<tr><td style=\"text-align:left\">gdp_per_cap</td><td></td><td>-0.0001 (-0.001, 0.0003)</td><td>0.0002 (-0.0002, 0.001)</td></tr>\n<tr><td colspan=\"4\" style=\"border-bottom: 1px solid black\"></td></tr><tr><td style=\"text-align:left\">WLS</td><td>No</td><td>No</td><td>Yes</td></tr>\n<tr><td style=\"text-align:left\">Robust</td><td>No</td><td>No</td><td>No</td></tr>\n<tr><td style=\"text-align:left\">Observations</td><td>50</td><td>50</td><td>50</td></tr>\n<tr><td style=\"text-align:left\">R<sup>2</sup></td><td>0.546</td><td>0.548</td><td>0.629</td></tr>\n<tr><td style=\"text-align:left\">Adjusted R<sup>2</sup></td><td>0.494</td><td>0.485</td><td>0.578</td></tr>\n<tr><td style=\"text-align:left\">Residual Std. Error</td><td>0.017 (df = 44)</td><td>0.017 (df = 43)</td><td>32.875 (df = 43)</td></tr>\n<tr><td style=\"text-align:left\">F Statistic</td><td>10.574<sup>***</sup> (df = 5; 44)</td><td>8.679<sup>***</sup> (df = 6; 43)</td><td>12.166<sup>***</sup> (df = 6; 43)</td></tr>\n<tr><td colspan=\"4\" style=\"border-bottom: 1px solid black\"></td></tr><tr><td style=\"text-align:left\"><em>Note:</em></td><td colspan=\"3\" style=\"text-align:right\"><sup>&sstarf;</sup>p<0.05; <sup>&sstarf;&sstarf;</sup>p<0.01; <sup>&sstarf;&sstarf;&sstarf;</sup>p<0.001</td></tr>\n</table>\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncheck_model(lm1)\n```\n\n::: {.cell-output-display}\n![](validation_files/figure-html/food_insecurity_check-1.png){fig-align='center' width=75%}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlmtest::bptest(lm1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tstudentized Breusch-Pagan test\n\ndata:  lm1\nBP = 12.068, df = 5, p-value = 0.03387\n```\n\n\n:::\n:::\n\n\n\n\n## Life Expectancy\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm2 <- lm(\n  lifeExpectancy ~ economics + environment + health + production + social,\n  data = dat\n)\n```\n:::\n\n::: {.cell class='stargazer-table'}\n\n<table style=\"text-align:center\"><tr><td colspan=\"4\" style=\"border-bottom: 1px solid black\"></td></tr><tr><td style=\"text-align:left\"></td><td colspan=\"3\"><em>Dependent variable:</em></td></tr>\n<tr><td></td><td colspan=\"3\" style=\"border-bottom: 1px solid black\"></td></tr>\n<tr><td style=\"text-align:left\"></td><td colspan=\"3\">Life Expectancy</td></tr>\n<tr><td style=\"text-align:left\"></td><td>Dimensions Only</td><td>With GDP per Capita</td><td>GDP and Pop. Weights</td></tr>\n<tr><td style=\"text-align:left\"></td><td>(1)</td><td>(2)</td><td>(3)</td></tr>\n<tr><td colspan=\"4\" style=\"border-bottom: 1px solid black\"></td></tr><tr><td style=\"text-align:left\">Constant</td><td>71.837<sup>***</sup> (70.057, 73.618)</td><td>69.820<sup>***</sup> (67.760, 71.881)</td><td>67.969<sup>***</sup> (65.677, 70.260)</td></tr>\n<tr><td style=\"text-align:left\">economics</td><td>2.385 (-1.688, 6.457)</td><td>3.416 (-0.360, 7.191)</td><td>2.618 (-1.533, 6.769)</td></tr>\n<tr><td style=\"text-align:left\">environment</td><td>-7.892<sup>***</sup> (-11.387, -4.397)</td><td>-6.921<sup>***</sup> (-10.170, -3.671)</td><td>-6.209<sup>**</sup> (-10.022, -2.396)</td></tr>\n<tr><td style=\"text-align:left\">health</td><td>19.661<sup>***</sup> (15.473, 23.849)</td><td>15.990<sup>***</sup> (11.525, 20.455)</td><td>8.808<sup>**</sup> (3.463, 14.152)</td></tr>\n<tr><td style=\"text-align:left\">production</td><td>2.012 (-0.601, 4.626)</td><td>1.301 (-1.127, 3.729)</td><td>1.689 (-0.060, 3.439)</td></tr>\n<tr><td style=\"text-align:left\">social</td><td>-2.153 (-6.240, 1.934)</td><td>-1.639 (-5.386, 2.107)</td><td>2.588 (-1.390, 6.566)</td></tr>\n<tr><td style=\"text-align:left\">gdp_per_cap</td><td></td><td>0.037<sup>**</sup> (0.014, 0.060)</td><td>0.074<sup>***</sup> (0.049, 0.100)</td></tr>\n<tr><td colspan=\"4\" style=\"border-bottom: 1px solid black\"></td></tr><tr><td style=\"text-align:left\">WLS</td><td>No</td><td>No</td><td>Yes</td></tr>\n<tr><td style=\"text-align:left\">Robust</td><td>No</td><td>No</td><td>No</td></tr>\n<tr><td style=\"text-align:left\">Observations</td><td>50</td><td>50</td><td>50</td></tr>\n<tr><td style=\"text-align:left\">R<sup>2</sup></td><td>0.805</td><td>0.841</td><td>0.837</td></tr>\n<tr><td style=\"text-align:left\">Adjusted R<sup>2</sup></td><td>0.783</td><td>0.819</td><td>0.814</td></tr>\n<tr><td style=\"text-align:left\">Residual Std. Error</td><td>0.957 (df = 44)</td><td>0.874 (df = 43)</td><td>2,099.744 (df = 43)</td></tr>\n<tr><td style=\"text-align:left\">F Statistic</td><td>36.380<sup>***</sup> (df = 5; 44)</td><td>37.979<sup>***</sup> (df = 6; 43)</td><td>36.684<sup>***</sup> (df = 6; 43)</td></tr>\n<tr><td colspan=\"4\" style=\"border-bottom: 1px solid black\"></td></tr><tr><td style=\"text-align:left\"><em>Note:</em></td><td colspan=\"3\" style=\"text-align:right\"><sup>&sstarf;</sup>p<0.05; <sup>&sstarf;&sstarf;</sup>p<0.01; <sup>&sstarf;&sstarf;&sstarf;</sup>p<0.001</td></tr>\n</table>\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncheck_model(lm2)\n```\n\n::: {.cell-output-display}\n![](validation_files/figure-html/life_exp_check-1.png){fig-align='center' width=75%}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlmtest::bptest(lm2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tstudentized Breusch-Pagan test\n\ndata:  lm2\nBP = 4.9045, df = 5, p-value = 0.4276\n```\n\n\n:::\n\n```{.r .cell-code}\nlife_exp_vcov <- vcovHC(lm2, type = 'HC3')\n```\n:::\n\n::: {.cell class='stargazer-table'}\n\n% Table created by stargazer v.5.2.3 by Marek Hlavac, Social Policy Institute. E-mail: marek.hlavac at gmail.com\n% Date and time: Wed, Mar 19, 2025 - 1:50:44 PM\n\\begin{table}[!htbp] \\centering \n  \\caption{} \n  \\label{} \n\\begin{tabular}{@{\\extracolsep{5pt}}lccc} \n\\\\[-1.8ex]\\hline \n\\hline \\\\[-1.8ex] \n & \\multicolumn{3}{c}{\\textit{Dependent variable:}} \\\\ \n\\cline{2-4} \n\\\\[-1.8ex] & \\multicolumn{3}{c}{Life Expectancy} \\\\ \n & Dimensions Only & With GDP per Capita & GDP and Pop. Weights \\\\ \n\\\\[-1.8ex] & (1) & (2) & (3)\\\\ \n\\hline \\\\[-1.8ex] \n Constant & 71.837$^{***}$ (70.167, 73.507) & 69.820$^{***}$ (67.668, 71.973) & 67.969$^{***}$ (63.691, 72.247) \\\\ \n  economics & 2.385 ($-$4.468, 9.237) & 3.416 ($-$3.295, 10.126) & 2.618 ($-$5.724, 10.960) \\\\ \n  environment & $-$7.892$^{***}$ ($-$12.184, $-$3.600) & $-$6.921$^{**}$ ($-$11.614, $-$2.227) & $-$6.209$^{*}$ ($-$11.599, $-$0.819) \\\\ \n  health & 19.661$^{***}$ (14.138, 25.184) & 15.990$^{***}$ (10.105, 21.875) & 8.808 ($-$6.379, 23.994) \\\\ \n  production & 2.012 ($-$0.872, 4.896) & 1.301 ($-$1.237, 3.839) & 1.689 ($-$1.312, 4.691) \\\\ \n  social & $-$2.153 ($-$8.840, 4.534) & $-$1.639 ($-$8.294, 5.016) & 2.588 ($-$9.282, 14.457) \\\\ \n  gdp\\_per\\_cap &  & 0.037$^{*}$ (0.008, 0.066) & 0.074$^{**}$ (0.025, 0.124) \\\\ \n \\hline \\\\[-1.8ex] \nWLS & No & No & Yes \\\\ \nRobust & Yes & Yes & Yes \\\\ \nF Statistic & 64.956*** (df = 5; 44) & 76.001*** (df = 6; 43) & 25.98*** (df = 6; 43) \\\\ \nObservations & 50 & 50 & 50 \\\\ \nR$^{2}$ & 0.805 & 0.841 & 0.837 \\\\ \nAdjusted R$^{2}$ & 0.783 & 0.819 & 0.814 \\\\ \nResidual Std. Error & 0.957 (df = 44) & 0.874 (df = 43) & 2,099.744 (df = 43) \\\\ \n\\hline \n\\hline \\\\[-1.8ex] \n\\textit{Note:}  & \\multicolumn{3}{r}{<sup>&sstarf;</sup>p<0.05; <sup>&sstarf;&sstarf;</sup>p<0.01; <sup>&sstarf;&sstarf;&sstarf;</sup>p<0.001} \\\\ \n\\end{tabular} \n\\end{table} \n:::\n\n\n\n\n## Food Environment Index\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm3 <- lm(\n  foodEnvironmentIndex ~ economics + environment + health + production + social,\n  data = dat\n)\n```\n:::\n\n::: {.cell class='stargazer-table'}\n\n<table style=\"text-align:center\"><tr><td colspan=\"4\" style=\"border-bottom: 1px solid black\"></td></tr><tr><td style=\"text-align:left\"></td><td colspan=\"3\"><em>Dependent variable:</em></td></tr>\n<tr><td></td><td colspan=\"3\" style=\"border-bottom: 1px solid black\"></td></tr>\n<tr><td style=\"text-align:left\"></td><td colspan=\"3\">Food Environment Index</td></tr>\n<tr><td style=\"text-align:left\"></td><td>Dimensions Only</td><td>With GDP per Capita</td><td>GDP and Pop. Weights</td></tr>\n<tr><td style=\"text-align:left\"></td><td>(1)</td><td>(2)</td><td>(3)</td></tr>\n<tr><td colspan=\"4\" style=\"border-bottom: 1px solid black\"></td></tr><tr><td style=\"text-align:left\">Constant</td><td>3.180<sup>***</sup> (1.905, 4.455)</td><td>2.498<sup>**</sup> (0.898, 4.098)</td><td>1.633 (0.004, 3.262)</td></tr>\n<tr><td style=\"text-align:left\">economics</td><td>0.058 (-2.859, 2.974)</td><td>0.406 (-2.526, 3.339)</td><td>3.630<sup>*</sup> (0.678, 6.581)</td></tr>\n<tr><td style=\"text-align:left\">environment</td><td>-0.979 (-3.482, 1.524)</td><td>-0.651 (-3.175, 1.873)</td><td>-0.450 (-3.161, 2.261)</td></tr>\n<tr><td style=\"text-align:left\">health</td><td>12.208<sup>***</sup> (9.208, 15.207)</td><td>10.967<sup>***</sup> (7.498, 14.435)</td><td>10.203<sup>***</sup> (6.403, 14.003)</td></tr>\n<tr><td style=\"text-align:left\">production</td><td>-0.016 (-1.888, 1.855)</td><td>-0.257 (-2.143, 1.629)</td><td>-0.512 (-1.756, 0.732)</td></tr>\n<tr><td style=\"text-align:left\">social</td><td>-1.060 (-3.987, 1.867)</td><td>-0.886 (-3.796, 2.024)</td><td>-0.870 (-3.698, 1.959)</td></tr>\n<tr><td style=\"text-align:left\">gdp_per_cap</td><td></td><td>0.012 (-0.005, 0.030)</td><td>0.016 (-0.003, 0.034)</td></tr>\n<tr><td colspan=\"4\" style=\"border-bottom: 1px solid black\"></td></tr><tr><td style=\"text-align:left\">WLS</td><td>No</td><td>No</td><td>Yes</td></tr>\n<tr><td style=\"text-align:left\">Robust</td><td>No</td><td>No</td><td>No</td></tr>\n<tr><td style=\"text-align:left\">Observations</td><td>50</td><td>50</td><td>50</td></tr>\n<tr><td style=\"text-align:left\">R<sup>2</sup></td><td>0.769</td><td>0.779</td><td>0.810</td></tr>\n<tr><td style=\"text-align:left\">Adjusted R<sup>2</sup></td><td>0.743</td><td>0.748</td><td>0.784</td></tr>\n<tr><td style=\"text-align:left\">Residual Std. Error</td><td>0.686 (df = 44)</td><td>0.679 (df = 43)</td><td>1,492.885 (df = 43)</td></tr>\n<tr><td style=\"text-align:left\">F Statistic</td><td>29.359<sup>***</sup> (df = 5; 44)</td><td>25.247<sup>***</sup> (df = 6; 43)</td><td>30.644<sup>***</sup> (df = 6; 43)</td></tr>\n<tr><td colspan=\"4\" style=\"border-bottom: 1px solid black\"></td></tr><tr><td style=\"text-align:left\"><em>Note:</em></td><td colspan=\"3\" style=\"text-align:right\"><sup>&sstarf;</sup>p<0.05; <sup>&sstarf;&sstarf;</sup>p<0.01; <sup>&sstarf;&sstarf;&sstarf;</sup>p<0.001</td></tr>\n</table>\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbptest(lm3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tstudentized Breusch-Pagan test\n\ndata:  lm3\nBP = 13.607, df = 5, p-value = 0.01831\n```\n\n\n:::\n\n```{.r .cell-code}\ncheck_model(lm3)\n```\n\n::: {.cell-output-display}\n![](validation_files/figure-html/food_env_check-1.png){fig-align='center' width=75%}\n:::\n:::\n\n\n\n\nThe Food Environment Index Regression does not show heteroskedasticity, but may well have some non-linear relationships given the residual plots. Health and economics are significant predictors, with a pretty healthy $R^2$.\n\nLet's try this one again with a random forest instead of linear model:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get a version of dat without irrelevant variables\ndat_ml <- dat %>% \n  select(\n    economics, \n    environment, \n    health, \n    production, \n    social, \n    foodEnvironmentIndex,\n    gdp_per_cap\n  )\n\n# Split data 60/40\nset.seed(42)\nindices <- createDataPartition(dat_ml$foodEnvironmentIndex, p = 0.60, list = FALSE)\ntraining_data <- dat_ml[indices, ]\ntesting_data <- dat_ml[-indices,]\n\nmy_folds <- createFolds(training_data$foodEnvironmentIndex, k = 5, list = TRUE)\n\n# Control\nmy_control <- trainControl(\n  method = 'cv',\n  number = 5,\n  verboseIter = TRUE,\n  index = my_folds\n)\n\n# Check for zero variance or near zero variance indicators\nnearZeroVar(dat, names = TRUE, saveMetrics = TRUE)\n# All clear\n\n# Also let's start a list with other results for preso\n# hyperparameters, etc\nml_out <- list()\n```\n:::\n\n\n\n\n### GLMnet\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nfood_env_glmnet <- train(\n  foodEnvironmentIndex ~ economics + environment + health + production + social + gdp_per_cap,\n  data = training_data, \n  tuneGrid = expand.grid(\n    alpha = seq(0.1, 1, length = 5),\n    lambda = seq(0.0001, 0.1, length = 100)\n  ),\n  method = \"glmnet\",\n  trControl = my_control,\n  preProcess = c('zv', 'center', 'scale')\n)\nget_str(food_env_glmnet)\n\n# Pull out best tune\nml_out$glmnet_best_tune <- food_env_glmnet$bestTune\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nimportance <- varImp(food_env_glmnet, scale = TRUE)\n\n# Save for preso \nsaveRDS(importance, 'preso/plots/val3_food_env_glmnet_importance.rds')\n\n#\npred <- predict(food_env_glmnet, testing_data)\nml_out$glmnet_performance <- postResample(\n  pred = pred, \n  obs = testing_data$foodEnvironmentIndex\n) %>% \n  round(3)\n# ml_out$glmnet_performance\n\nml_out$glmnet_imp_plot <- importance %>% \n  ggplot(aes(x = Overall, y = rownames(.))) +\n  geom_col(\n    color = 'royalblue',\n    fill = 'lightblue'\n  ) +\n  theme_classic() \n\nplot(importance)\n```\n\n::: {.cell-output-display}\n![](validation_files/figure-html/food_env_glmnet_importance-1.png){fig-align='center' width=75%}\n:::\n:::\n\n\n\n\n### Random Forest\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nfood_env_rf <- train(\n  foodEnvironmentIndex ~ production + social + health + economics + environment + gdp_per_cap,\n  data = training_data, \n  tuneLength = 7,\n  method = \"ranger\",\n  trControl = my_control,\n  importance = 'impurity'\n)\n\nget_str(food_env_rf)\n\n# Pull out best tune\nml_out$rf_best_tune <- food_env_rf$bestTune\n```\n:::\n\n\n\n\nOOB prediction error (MSE): 0.6360507\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nimportance <- varImp(food_env_rf, scale = TRUE)\n\n# Save for preso\nsaveRDS(importance, 'preso/plots/val3_rf_importance.rds')\n\n# Get RMSEA and stuff\npred <- predict(food_env_rf, testing_data)\nml_out$rf_performance <- postResample(\n  pred = pred, \n  obs = testing_data$foodEnvironmentIndex\n) %>% \n  round(3)\n# ml_out$rf_performance\n\nimp <- importance$importance %>% \n  as.data.frame() %>% \n  tibble::rownames_to_column() %>% \n  setNames(c('Feature', 'Importance')) %>% \n  mutate(Importance = round(Importance, 2)) %>% \n  arrange(desc(Importance)) %>% \n  mutate(\n    Feature = Feature %>% \n      str_to_title() %>% \n      str_replace('Gdp_per_cap', 'GDP per capita')\n  )\n  \n\nml_out$rf_imp_plot <- imp %>% \n  ggplot(aes(\n    x = Importance, \n    y = reorder(Feature, Importance),\n    text = paste0(\n      '<b>Variable:</b> ', Feature, '\\n',\n      '<b>Importance:</b> ', Importance\n    )\n  )) +\n  geom_col(\n    color = 'royalblue',\n    fill = 'lightblue',\n  ) +\n  theme_classic() +\n  labs(\n    x = 'Importance',\n    y = 'Feature'\n  )\n\n# Save all results for preso\nsaveRDS(ml_out, 'preso/data/ml_out.rds')\n\n# Show plot\nml_out$rf_imp_plot\n```\n\n::: {.cell-output-display}\n![](validation_files/figure-html/food_env_rf_importance-1.png){fig-align='center' width=75%}\n:::\n:::\n\n\n\n\n## Happiness Score\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm4 <- lm(\n  happinessScore ~ economics + environment + health + production + social,\n  data = dat\n)\n```\n:::\n\n::: {.cell class='stargazer-table'}\n\n<table style=\"text-align:center\"><tr><td colspan=\"4\" style=\"border-bottom: 1px solid black\"></td></tr><tr><td style=\"text-align:left\"></td><td colspan=\"3\"><em>Dependent variable:</em></td></tr>\n<tr><td></td><td colspan=\"3\" style=\"border-bottom: 1px solid black\"></td></tr>\n<tr><td style=\"text-align:left\"></td><td colspan=\"3\">Happiness Index</td></tr>\n<tr><td style=\"text-align:left\"></td><td>Dimensions Only</td><td>With GDP per Capita</td><td>GDP and Pop. Weights</td></tr>\n<tr><td style=\"text-align:left\"></td><td>(1)</td><td>(2)</td><td>(3)</td></tr>\n<tr><td colspan=\"4\" style=\"border-bottom: 1px solid black\"></td></tr><tr><td style=\"text-align:left\">Constant</td><td>32.347<sup>***</sup> (23.503, 41.191)</td><td>25.028<sup>***</sup> (14.265, 35.791)</td><td>25.015<sup>***</sup> (14.267, 35.763)</td></tr>\n<tr><td style=\"text-align:left\">economics</td><td>23.038<sup>*</sup> (2.804, 43.271)</td><td>26.779<sup>*</sup> (7.056, 46.502)</td><td>24.625<sup>*</sup> (5.152, 44.098)</td></tr>\n<tr><td style=\"text-align:left\">environment</td><td>-34.924<sup>***</sup> (-52.287, -17.561)</td><td>-31.401<sup>***</sup> (-48.376, -14.425)</td><td>-26.400<sup>**</sup> (-44.286, -8.513)</td></tr>\n<tr><td style=\"text-align:left\">health</td><td>57.152<sup>***</sup> (36.346, 77.959)</td><td>43.831<sup>***</sup> (20.505, 67.156)</td><td>40.807<sup>**</sup> (15.736, 65.878)</td></tr>\n<tr><td style=\"text-align:left\">production</td><td>13.655<sup>*</sup> (0.671, 26.638)</td><td>11.074 (-1.610, 23.759)</td><td>6.970 (-1.238, 15.178)</td></tr>\n<tr><td style=\"text-align:left\">social</td><td>-2.149 (-22.454, 18.156)</td><td>-0.286 (-19.858, 19.287)</td><td>3.405 (-15.257, 22.067)</td></tr>\n<tr><td style=\"text-align:left\">gdp_per_cap</td><td></td><td>0.134<sup>*</sup> (0.013, 0.254)</td><td>0.130<sup>*</sup> (0.010, 0.250)</td></tr>\n<tr><td colspan=\"4\" style=\"border-bottom: 1px solid black\"></td></tr><tr><td style=\"text-align:left\">WLS</td><td>No</td><td>No</td><td>Yes</td></tr>\n<tr><td style=\"text-align:left\">Robust</td><td>No</td><td>No</td><td>No</td></tr>\n<tr><td style=\"text-align:left\">Observations</td><td>50</td><td>50</td><td>50</td></tr>\n<tr><td style=\"text-align:left\">R<sup>2</sup></td><td>0.655</td><td>0.689</td><td>0.717</td></tr>\n<tr><td style=\"text-align:left\">Adjusted R<sup>2</sup></td><td>0.616</td><td>0.646</td><td>0.677</td></tr>\n<tr><td style=\"text-align:left\">Residual Std. Error</td><td>4.757 (df = 44)</td><td>4.568 (df = 43)</td><td>9,849.609 (df = 43)</td></tr>\n<tr><td style=\"text-align:left\">F Statistic</td><td>16.709<sup>***</sup> (df = 5; 44)</td><td>15.882<sup>***</sup> (df = 6; 43)</td><td>18.125<sup>***</sup> (df = 6; 43)</td></tr>\n<tr><td colspan=\"4\" style=\"border-bottom: 1px solid black\"></td></tr><tr><td style=\"text-align:left\"><em>Note:</em></td><td colspan=\"3\" style=\"text-align:right\"><sup>&sstarf;</sup>p<0.05; <sup>&sstarf;&sstarf;</sup>p<0.01; <sup>&sstarf;&sstarf;&sstarf;</sup>p<0.001</td></tr>\n</table>\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncheck_model(lm4)\n```\n\n::: {.cell-output-display}\n![](validation_files/figure-html/happiness_check-1.png){fig-align='center' width=75%}\n:::\n:::\n\n\n\n\n# PCA\n\nLet's use PCA to see how our indicators are associated with a set of orthogonal components. Ideally, we might like to see that each indicator is associated strongly with a single component (simple structure) that corresponds to the dimension.\n\n## Component Extraction\n\nFirst we determine how many components to extract. This is a bit subjective, so we will use a few methods.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nraw_minmax_geo <- readRDS('data/raw_minmax_geo.rds')\nframework <- readRDS('data/filtered_frame.rds')\n\n# Filter down to just indicators for PCA\npca_dat <- raw_minmax_geo %>% \n  select(starts_with('indic')) %>% \n  setNames(c(str_remove(names(.), 'indic_'))) %>% \n  as.data.frame()\n# get_str(pca_dat)\n\n# Explore how many factors to extract\nVSS(pca_dat, n = 8, fm = 'pc', rotate = 'Promax')\n```\n\n::: {.cell-output-display}\n![](validation_files/figure-html/extraction-1.png){width=1400}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nVery Simple Structure\nCall: vss(x = x, n = n, rotate = rotate, diagonal = diagonal, fm = fm, \n    n.obs = n.obs, plot = plot, title = title, use = use, cor = cor)\nVSS complexity 1 achieves a maximimum of 0.53  with  2  factors\nVSS complexity 2 achieves a maximimum of 0.75  with  3  factors\n\nThe Velicer MAP achieves a minimum of 0.04  with  6  factors \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nBIC achieves a minimum of  Inf  with    factors\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSample Size adjusted BIC achieves a minimum of  Inf  with    factors\n\nStatistics by number of factors \n  vss1 vss2   map dof chisq prob sqresid  fit RMSEA BIC SABIC complex eChisq\n1 0.42 0.00 0.069   0    NA   NA    85.4 0.42    NA  NA    NA      NA     NA\n2 0.53 0.67 0.059   0    NA   NA    48.6 0.67    NA  NA    NA      NA     NA\n3 0.53 0.75 0.055   0    NA   NA    30.7 0.79    NA  NA    NA      NA     NA\n4 0.53 0.75 0.046   0    NA   NA    19.6 0.87    NA  NA    NA      NA     NA\n5 0.47 0.73 0.039   0    NA   NA    13.2 0.91    NA  NA    NA      NA     NA\n6 0.48 0.73 0.039   0    NA   NA    10.5 0.93    NA  NA    NA      NA     NA\n7 0.46 0.72 0.041   0    NA   NA     8.5 0.94    NA  NA    NA      NA     NA\n8 0.47 0.68 0.040   0    NA   NA     6.5 0.96    NA  NA    NA      NA     NA\n  SRMR eCRMS eBIC\n1   NA    NA   NA\n2   NA    NA   NA\n3   NA    NA   NA\n4   NA    NA   NA\n5   NA    NA   NA\n6   NA    NA   NA\n7   NA    NA   NA\n8   NA    NA   NA\n```\n\n\n:::\n\n```{.r .cell-code}\nset.seed(42)\nfa.parallel(pca_dat, fm = 'ml')\n```\n\n::: {.cell-output-display}\n![](validation_files/figure-html/extraction-2.png){width=1400}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nParallel analysis suggests that the number of factors =  5  and the number of components =  5 \n```\n\n\n:::\n:::\n\n\n\n\nMAP suggests 6, VSS 2 or 3, PA suggests 5. Not half bad. I think we are justified to go with 5.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Oblique rotations: promax, oblimin, simplimax, cluster\nrotations <- c(\n  'Promax',\n  'oblimin',\n  'simplimax',\n  'cluster'\n)\npca_outs <- map(rotations, ~ {\n  pca_dat %>% \n    # scale() %>% \n    pca(nfactors = 5, rotate = .x)\n}) %>% \n  setNames(c(rotations))\n\n# Save a version of promax for preso?\npng(\n  filename = 'preso/plots/scree.png',\n  width = 800,\n  height = 600,\n  units = 'px',\n  res = 150\n)\nplot(\n  pca_outs$simplimax$values,\n  xlab = 'Number of Components',\n  ylab = 'Eigen Values'\n)\nabline(h = 1)\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npng \n  2 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Now actually show it \nplot(\n  pca_outs$simplimax$values,\n  xlab = 'Number of Components',\n  ylab = 'Eigen Values'\n)\nabline(h = 1)\n```\n\n::: {.cell-output-display}\n![](validation_files/figure-html/scree-1.png){width=1400}\n:::\n:::\n\n\n\n\nThe scree plot makes a reasonably convincing case for 6 components, as the slope falls off substantially after the fifth.\n\n## Run PCA\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npca_tables <- map(pca_outs, ~ {\n  .x$loadings %>% \n    unclass() %>% \n    as.data.frame() %>% \n    select(order(colnames(.))) %>%\n    mutate(\n      across(everything(), ~ round(.x, 3)),\n      across(everything(), ~ case_when(\n        .x < 0.20 ~ '',\n        .x >= 0.20 & .x < 0.32 ~ '.',\n        .x >= 0.32 ~ as.character(.x),\n        .default = NA\n      ))\n    ) %>% \n    rownames_to_column() %>% \n    rename(indicator = 1) %>% \n    mutate(\n      dimension = framework$dimension[match(indicator, framework$indicator)]\n    ) %>% \n    select(indicator, dimension, everything())\n})\nget_str(pca_tables)\n\n# Save it for preso\nsaveRDS(pca_tables, 'preso/data/pca_tables.rds')\n```\n:::\n\n::: {.cell class='centered'}\n\n```{.r .cell-code}\nget_reactable(\n  pca_tables$Promax\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"reactable html-widget html-fill-item\" id=\"htmlwidget-564e894433c987abfd45\" style=\"width:auto;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-564e894433c987abfd45\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"indicator\":[\"access to land\",\"wealth/income distribution\",\"income stability\",\"operations diversification\",\"use of ag/farm/crop insurance\",\"carbon fluxes\",\"carbon stocks\",\"embodied carbon\",\"forest health\",\"biodiversity\",\"land use diversity\",\"sensitive or rare habitats\",\"water quality\",\"water quantity\",\"educational attainment\",\"access to culturally appropriate food\",\"dietary quality\",\"food access\",\"food affordability\",\"mental health tbd\",\"access to care\",\"housing supply and quality\",\"physical health tbd\",\"total quantity exported\",\"production species diversity\",\"production inputs\",\"total quantity food products\",\"total quantity forest products\",\"total quantity non-food ag products\",\"value added market\",\"crop failure\",\"social connectedness\",\"community safety\",\"diverse representation\",\"age diversity\",\"gender diversity\",\"racial diversity\",\"participatory governance\"],\"dimension\":[\"economics\",\"economics\",\"economics\",\"economics\",\"economics\",\"environment\",\"environment\",\"environment\",\"environment\",\"environment\",\"environment\",\"environment\",\"environment\",\"environment\",\"health\",\"health\",\"health\",\"health\",\"health\",\"health\",\"health\",\"health\",\"health\",\"production\",\"production\",\"production\",\"production\",\"production\",\"production\",\"production\",\"production\",\"social\",\"social\",\"social\",\"social\",\"social\",\"social\",\"social\"],\"RC1\":[\"\",\"\",\"1.013\",\"\",\"\",\"\",\".\",\"0.731\",\"\",\"\",\"\",\"\",\"\",\"\",\".\",\"\",\"\",\"0.427\",\"\",\"\",\"\",\"\",\"0.354\",\"1.008\",\"0.429\",\"\",\"0.992\",\"\",\"0.493\",\"\",\"\",\".\",\"\",\"\",\"\",\"\",\"\",\"\"],\"RC2\":[\"\",\"0.78\",\".\",\".\",\"\",\".\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"0.611\",\"\",\"\",\"\",\".\",\"\",\"0.75\",\".\",\"0.812\",\"\",\"\",\"\",\"\",\"\",\"\",\".\",\"\",\"0.69\",\"\",\"\",\".\",\"\",\"\",\"0.408\"],\"RC3\":[\"\",\"\",\"\",\"0.414\",\"\",\"\",\"0.653\",\"\",\"0.825\",\".\",\"\",\".\",\"0.572\",\"\",\"0.44\",\".\",\"0.62\",\"0.77\",\"0.461\",\"0.688\",\"0.36\",\"\",\"0.353\",\"\",\"\",\"\",\"\",\"0.41\",\".\",\"0.575\",\".\",\"\",\"\",\"\",\"\",\"\",\"\",\"0.433\"],\"RC4\":[\"\",\"\",\"\",\"\",\"\",\".\",\"\",\"\",\"\",\"0.482\",\"\",\"0.723\",\"0.473\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"0.362\",\"0.369\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"0.554\",\".\",\"0.395\"],\"RC5\":[\".\",\"\",\".\",\"0.357\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"0.641\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"0.472\",\"\",\"\",\"\",\"\",\"0.42\",\"\",\"\",\"\",\"0.371\",\"\",\".\",\"0.868\",\"\"]},\"columns\":[{\"id\":\"indicator\",\"name\":\"indicator\",\"type\":\"character\"},{\"id\":\"dimension\",\"name\":\"dimension\",\"type\":\"character\"},{\"id\":\"RC1\",\"name\":\"RC1\",\"type\":\"character\"},{\"id\":\"RC2\",\"name\":\"RC2\",\"type\":\"character\"},{\"id\":\"RC3\",\"name\":\"RC3\",\"type\":\"character\"},{\"id\":\"RC4\",\"name\":\"RC4\",\"type\":\"character\"},{\"id\":\"RC5\",\"name\":\"RC5\",\"type\":\"character\"}],\"resizable\":true,\"filterable\":true,\"searchable\":true,\"defaultPageSize\":10,\"showPageSizeOptions\":true,\"onClick\":\"select\",\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"style\":{\"fontSize\":\"14px\"},\"dataKey\":\"d476e5cf03672d4eb4e8ef7fc9b53047\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\nNote that we are using the promax rotation here as it seemed most interpretable, but we have created and saved all the other available oblique rotations as well. \n\nIt looks like our economics indicators are quite scattered, but the environment indicators mostly stick to components 3 and 4. Health is quite well centered on component 3, although the \"physical health tbd\" indicator has meaningful loadings on three components. Production and social are rather scattered, and it is also noteworthy that participatory governance is associated with three components as well.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/core-js-2.5.3/shim.min.js\"></script>\n<script src=\"../site_libs/react-18.2.0/react.min.js\"></script>\n<script src=\"../site_libs/react-18.2.0/react-dom.min.js\"></script>\n<script src=\"../site_libs/reactwidget-2.0.0/react-tools.js\"></script>\n<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../site_libs/reactable-0.4.4/reactable.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/reactable-binding-0.4.4/reactable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}