---
title: "Sustainability Metrics<br>Secondary Data"
author: "Chris Donovan"
institute: "Food Systems Research Center"
date: '2025-03-19'
date-format: long
format:
  revealjs:
    embed-resources: true
    incremental: false
    theme: [serif, preso.scss]
    transition: fade
    scrollable: true
    chalkboard: false
    revealjs-plugins:
      - revealjs-text-resizer
editor: 
  markdown: 
    wrap: 72
bibliography: ../fsrc.bib
citations-hover: true
citeproc: true
include-in-header:
 - text: |
     <style>
     #title-slide .title {
       font-size: 2em;
     }
     </style>
---

```{r}
#| label: prep
#| include: false
pacman::p_load(
  ggplot2,
  ggpubr,
  plotly,
  forcats,
  reactable,
  htmltools,
  stringr,
  Hmisc,
  reshape,
  performance,
  AER,
  sandwich,
  sjPlot,
  caret,
  ranger,
  glmnet,
  conflicted,
  knitr,
  kableExtra,
  sf,
  leaflet,
  ggraph,
  igraph,
  readr,
  RColorBrewer,
  paletteer,
  fmsb,
  purrr,
  rmapshaper
)

source('dev/get_reactable.R')
source('dev/get_vt_spiders.R')

conflicted::conflicts_prefer(
  dplyr::select(),
  dplyr::filter(),
  tidyr::expand(),
  .quiet = TRUE
)
```

## Introduction {.smaller}

::: {.columns .v-center-container}
::: {.column width = '40%'}

-   Goals for secondary data:
    -   Identify existing data and gaps
    -   Explore methods of aggregating data
-   Structure of presentation:
    1.  Framework and methods
    2.  Preliminary results of case study
    3.  Uncertainty and sensitivity
-   Guiding questions:
    -   How well do the data represesent the system?
    -   Valuation, scaling, weighting, aggregation
    -   Where and how do we incorporate qualitative data?
:::

::: {.column width = '60%'}

![Intervale Farm, Sally McCay, UVM
Photo](../images/intervale_small.png){fig-align="center" width="90%"
fig-alt="A picture of a field at Intervale Farm."}

:::

::::

::: notes
-   The point is to take stock of existing data, swap out and fill in
    with primary research where necessary.
-   Skeleton of a framework.
:::

# 1. Framework and Methods {.centered-section}

## Framework {.smaller}

::: panel-tabset
### Economics

```{r}
#| fig-height: 8
#| fig-width: 10
#| fig-align: center
#| out-width: 75%
plots <- readRDS('preso/plots/frameworks.rds')
plots$economics
```

### Environment

```{r}
#| fig-height: 8
#| fig-width: 10
#| fig-align: center
#| out-width: 75%
plots$environment
```

### Health

```{r}
#| fig-height: 11
#| fig-width: 10
#| fig-align: center
#| out-width: 75%
plots$health
```

### Production

```{r}
#| fig-height: 7
#| fig-width: 10
#| fig-align: center
#| out-width: 75%
plots$production
```

### Social

```{r}
#| fig-height: 8
#| fig-width: 10
#| fig-align: center
#| out-width: 75%
plots$social
```
:::

::: notes
-   NONE is a placeholder for when I don't have a metric there
-   Many of these are not ideal. All ears for more datasets
:::

## Framework: Secondary Data {.smaller}

```{r}
#| label: metadata_table_refined
metadata <- readRDS('preso/data/meta_for_table.rds')

htmltools::browsable(
  tagList(
    
    tags$div(
      # style = "display: flex; gap: 16px; margin-bottom: 20px; justify-content: center;",
      style = "display: flex; margin-bottom: 20px; justify-content: center;",
      
      # tags$button(
      #   class = "btn btn-primary",
      #   style = "display: flex; align-items: center; gap: 8px; padding: 8px 12px;",
      #   tagList(fontawesome::fa("arrows-left-right-to-line"), "Show/hide more columns"),
      #   onclick = "Reactable.setHiddenColumns('metadata_table_refined', prevColumns => {
      #     return prevColumns.length === 0 ? ['Definition', 'Scope', 'Resolution', 'Updates', 'Units', 'Url'] : []
      #   })"
      # ),
      
      tags$button(
        class = "btn btn-primary",
        style = "display: flex; align-items: center; gap: 8px; padding: 8px 12px;",
        tagList(fontawesome::fa("download"), "Download as CSV"),
        onclick = "Reactable.downloadDataCSV('metadata_table_refined', 'sustainability_metadata.csv')"
      )
    ),
    
    reactable(
      metadata[, which(names(metadata) != 'Years')],
      sortable = TRUE,
      resizable = TRUE,
      filterable = TRUE,
      searchable = TRUE,
      pagination = TRUE,
      bordered = TRUE,
      wrap = TRUE,
      rownames = FALSE,
      onClick = 'select',
      striped = TRUE,
      pageSizeOptions = c(5, 10, 25, 50, 100),
      defaultPageSize = 5,
      showPageSizeOptions = TRUE,
      highlight = TRUE,
      style = list(fontSize = "14px"),
      compact = TRUE,
      fullWidth = TRUE,
      columns = list(
        Metric = colDef(
          minWidth = 200,
          sticky = 'left'
        ),
        'Variable Name' = colDef(
          minWidth = 150
        ),
        Definition = colDef(
          minWidth = 250
        ),
        'Latest Year' = colDef(minWidth = 75),
        Source = colDef(minWidth = 250),
        Scope = colDef(show = FALSE),
        Resolution = colDef(show = FALSE),
        Url = colDef(
          minWidth = 300,
          show = FALSE
        )
      ),
      defaultColDef = colDef(minWidth = 100),
      elementId = "metadata_table_refined",
      details = function(index) {
        div(
          style = "padding: 15px; border: 1px solid #ddd; margin: 10px 0;
             background-color: #ecf4ed; border-radius: 10px; border-color: black;
             box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);",
          
          tags$h4(
            strong("Details"), 
          ),
          tags$p(
            strong('Metric Name: '), 
            as.character(metadata[index, 'Metric']),
          ),
          tags$p(
            strong('Variable Name: '), 
            as.character(metadata[index, 'Variable Name']),
          ),
          tags$p(
            strong('Definition: '), 
            as.character(metadata[index, 'Definition']),
          ),
          tags$p(
            strong('Source: '), 
            as.character(metadata[index, 'Source'])
          ),
          tags$p(
            strong('Latest Year: '), 
            as.character(metadata[index, 'Year'])
          ),
          tags$p(
            strong('All Years (cleaned, wrangled, and included): '), 
            as.character(metadata[index, 'Years'])
          ),
          tags$p(
            strong('Updates: '), 
            str_to_title(as.character(metadata[index, 'Updates']))
          ),
          tags$p(
            strong('URL: '), 
            tags$a(
              href = as.character(metadata[index, 'Url']),
              target = '_blank',
              as.character(metadata[index, 'Url'])
            )
          )
        )
      }
    )
  )
)
```

::: notes
-   \~650 metrics, available on website
-   Set of 130 to match refined framework

Sources

-   USDA NASS: income, expenses, labor, size, d2c sales
-   USDA ERS Farm Income and Wealth Statistics: imports, exports, margin
    protection payments, emergency program payments, indemnities,
    capital expenditures and consumption
-   USDA ERS Food Environment Atlas: WIC, SNAP, grocery store density
-   USDA Farm Service Agency Disaster Assistance: emergency declarations
    (proxy for EWE)
-   USDA Food and Nutrition Service Farm to School program: SNAP and WIC
    eligibility rates, coverage rates, school food authority spending,
    farm to school program, culturally relevant foods
-   U Wisconsin Population health institute, county health rankings and
    roadmaps: all health stuff, social associations, connectedness,
    voter turnout, health care infrastructure
-   US Census ACS: earnings for FFF and Food service jobs, rental
    vacancy rates, income inequality
-   EPA State GHG Data: emissions form agriculture (N20, CO2, CH4)
-   EPA National Aquatic Surveys: water quality, conditions based on
    phosphorus, nitrogen, habitat complexity,
-   TreeMap 2016: carbon stocks, forest health
-   NatureServe - biodiversity data, ecosystem data
:::

## Methods: Desirable Directions {.smaller}

::: columns
::: {.column width = '30%'}

-   How do we decide if values for an indicator are good or bad?
-   @schneider2023StateFoodSystems gave every indicator a positive and
    negative direction
-   @jacobi2020NewUnderstandingEvaluation used official benchmarks where
    possible, otherwise the largest value set to 100%
-   Others have used the distance to a reference system [@adriaanse1993]
:::

::: {.column width = '70%'}

```{r}
desirable_table <- readRDS('preso/data/desirable_directions_table.rds')
desirable_table %>% 
  dplyr::select(
    metric,
    desirable,
    definition,
    source
  ) %>% 
  setNames(c(names(.) %>% stringr::str_to_title())) %>% 
  get_reactable(
    defaultPageSize = 5,
    columns = list(
      Metric = colDef(minWidth = 125),
      Desirable = colDef(minWidth = 75),
      Definition = colDef(minWidth = 150),
      Source = colDef(minWidth = 150)
    )
  )
```

:::

::::

## Methods: Transformations {.smaller}

:::: panel-tabset
### Raw

::: columns
::: {.column width = '30%'}

**Raw Values**

-   Do nothing
-   Strengths:
    -   Transparent
    -   Unbiased
-   Weaknesses:
    -   Vulnerable to outliers
    -   Harder to distinguish between similar systems
-   @hammond2017RuralHouseholdMultiIndicator use raw values in RHoMIS
    survey to compare sustainability across food systems
:::

::: {.column width = '70%' .r-stretch}

![Hammond et al. (2017)](plots/hammond_raw.png){fig-align="center"
width="100%"}
::::

::::

### Winsor

**Winsorization**

-   Reduce extreme values to a percentile (95th and 5th)
-   Strengths:
    -   Doesn't reward overperformance
    -   Allows for more robust analyses without outliers
        [@mayerStrengthsWeaknessesCommon2008]
-   Weaknesses
    -   Loss of information
    -   Non-linear transformation of data
-   Used in the Environmental Performance Indicator (EPI) before scaling
    from 0 to 100 [@esty2008Pilot2006Environmental]

### Box Cox

**Box Cox** [@bickel1981]

-   Finds an optimal value of $\lambda$ to normalize distribution

${\rm For}\ \lambda\neq0,\ f\lambda(x) = (sign(x)|x|^\lambda-1)/\lambda$

${\rm For}\ \lambda = 0,\ f_0(x) = log(x)$

-   Strengths:
    -   More tractable distributions for analysis
-   Weaknesses:
    -   Challenging to interpret
    -   Changes relationships between variables
-   @bene2019GlobalMapIndicators used Box Cox transformations on skewed
    indicators (\>2) before using min-max scaling.

::::

## Methods: Rescaling {.smaller}

:::: panel-tabset
### Rank Order

::: columns
::: {.column width = '40%'}

**Rank Order**

-   Rank against other states (50 is best, 1 is worst)
-   Strengths:
    -   Makes no distributional assumptions
    -   Useful for comparing other transformation methods
-   Weaknesses:
    -   Loss of information
-   Used by @schneider2025 for lack of robust data
:::

::: {.column width = '60%'}

![Schneider et al. (2023)](plots/schneider_rank.png){fig-align="center"
width="95%" fig-alt="A picture of a field at Intervale Farm."}
::::

::::

### Min Max

::: columns
::: {.column width = '50%'}

**Min Max** [@oecdHandbookConstructingComposite2008]

-   Scales all data from 0 (worst) to 1 (best)

$\Large I^t_qc = \frac{x^t_qc - min_c(x^{t_0}_q)}{max_c(x^{t_0}_q)-min_c(x^{t_0}_q)}$

Where $x^t_qc$ is the metric $q$ for state $c$ at time $t$.

-   Strengths:
    -   Intitive, approachable
    -   Linear transformation preserves relationships
-   Weaknesses:
    -   Susceptible to outliers
-   Widely used in sustainability composite indices
    [@schneider2025,@schneider2023StateFoodSystems,@bene2019GlobalMapIndicators]
:::

::: {.column width = '50%'}

![Jacobi et al. (2020)](plots/jacobi_minmax.png){fig-align="center"
width="90%"}

:::

::::

### Z-Scores

**Z-Scores** [@oecdHandbookConstructingComposite2008]

-   Scales data to mean of 0 and standard deviation of 1

$I^t_{qc} = \frac{x^t_{qc}-x^t_{qc=\overline{c}}}{\sigma^t_{qc=\overline{c}}}$

-   Larger numbers are better, but no limits
-   Strengths:
    -   Linear transformation
    -   Makes empirical sense
-   Weaknesses:
    -   Harder to interpret and communicate
    -   Sometimes incompatible with other methods

### Distance\*

**Distance to Target** [@oecdHandbookConstructingComposite2008]

-   Dimensionless ratio of the indicator to a reference system or
    reference value

$I^t_qc = \frac{x^t_qc}{x^t_{qc=\overline{c}}}$

-   Used with official benchmarks like minimum wage
    [@jacobi2020NewUnderstandingEvaluation]
-   Strengths:
    -   Flexible and intuitive
    -   More nuanced and holistic
-   Weaknesses:
    -   Challenging to set targets
    -   Stakeholder involvement

:::

::: notes
-   Schneider: average country rankings per theme, by grouped. Min max
    distance from group to global mean.
-   Jacobi: minmax - three food systems in Kenya (56 indicators)
:::

## Methods: Aggregation and Weighting {.smaller}

::: panel-tabset
### Arithmetic

**Arithmetic Means**

-   Plain old average
-   Strengths:
    -   Simple, interpretable
    -   Know how it's wrong
-   Weaknesses:
    -   Compensatory method - make up for underperformance in one area
        with overperformance in another
    -   Implicit equal weighting
-   Commonly used in composite index literature
    [@jacobi2020NewUnderstandingEvaluation]

### Geometric

**Geometric Means**

-   $n$th root of the product of values

$\Large \sqrt[n]{x_1 * x_2 * ... * x_n}$

-   Strengths:
    -   Partially compensable
    -   Rewards even performance across areas
-   Weaknesses:
    -   Not compatible with negative values\*
    -   Limits to variance-based sensitivity analysis
-   @gomez-limon2010EmpiricalEvaluationAgricultural compared results of
    both arithmetic and geometric means
-   @bene2019GlobalMapIndicators used arithmetic means for social and
    food dimensions, geometric means for environmental and economic
    dimensions

### Budget\*

**Budget Allocation** [@nardo2005]

-   Weight based on expert or stakeholder opinion
    -   Allocate a budget of 100 'points' to distribute among indicators
    -   Take means of allocations to get weights
    -   Discussion, iteration, convergence
-   Strengths:
    -   Leverage knowledge and experience
    -   Flexible and holistic
-   Weaknesses:
    -   Participant selection
    -   Limited generalizability

### PCA\*

**Principal Components Analysis**

-   Reduces variables to a smaller set of uncorrelated components
-   Loadings show contribution of variables to component
-   Strengths:
    -   Empirical, quantitative results
-   Weaknesses:
    -   Extraction
    -   Interpretation
    -   Incompatible with a priori hypotheses
-   Use loadings to weight indicators, calculate weighted sum as domain
    score [@nicolettiSummaryIndicatorsProduct2000]
-   @esty2002 tried PCA to develop composite but found the components
    were uninterpretable

### Others\*

**Analytic Hierarchy Process**

-   Analysis of pairwise preferences
-   Quantify tradeoffs between indicators

**Conjoint Analysis**

-   Survey-based
-   Stated preference research
-   Discrete choice analysis

**Multicriteria Approach** [@nardo2005]

-   Non-compensatory, based on pair-wise ratio comparisons between units

**Data Envelopment Analysis** [@oecdHandbookConstructingComposite2008]

-   Use an efficiency frontier to define relative performance of
    countries
:::

## Methods: Comparisons {.smaller}

::: panel-tabset
### Raw Rank

```{r}
#| fig-width: 10
#| fig-height: 5
dat <- readRDS('data/state_score_iterations.rds')
get_vt_spiders(dat, 'raw_rank')
```

### Winsor Rank

```{r}
#| fig-width: 10
#| fig-height: 5
get_vt_spiders(dat, 'winsor_rank')
```

### Box Cox Rank

```{r}
#| fig-width: 10
#| fig-height: 5
get_vt_spiders(dat, 'boxcox_rank')
```

### Raw Min Max

```{r}
#| fig-width: 10
#| fig-height: 5
get_vt_spiders(dat, 'raw_minmax')
```

### Winsor Min Max

```{r}
#| fig-width: 10
#| fig-height: 5
get_vt_spiders(dat, 'winsor_minmax')
```

### Box Cox Min Max

```{r}
#| fig-width: 10
#| fig-height: 5
get_vt_spiders(dat, 'boxcox_minmax')
```

### Raw Z-Score

```{r}
#| fig-width: 10
#| fig-height: 5
get_vt_spiders(dat, 'raw_zscore')
```

### Winsor Z-Score

```{r}
#| fig-width: 10
#| fig-height: 5
get_vt_spiders(dat, 'winsor_zscore')
```

### Box Cox Z-Score

```{r}
#| fig-width: 10
#| fig-height: 5
get_vt_spiders(dat, 'boxcox_zscore')
```
:::

::: notes
-   We now have 18 combinations of transformation, scaling, aggregation
-   No one way is objectively better than any other - just exploring
    options
-   Note about spider graph/radar chart: misleading, do not interpret
    area or order.
-   US state median in red
-   TRANSITION INTO CASE STUDY OF MIN MAX GEO
:::

# 2. Case Study {.centered-section}

## Case Study: Dimension Score Maps {.smaller}

Raw + min max scaling + geometric aggregation

::: panel-tabset
```{r}
#| label: map
#| include: false
dim_scores <- readRDS('data/raw_minmax_geo.rds')
state_key <- readRDS('data/state_key.rds')
dim_scores <- dim_scores %>% 
  as.data.frame() %>% 
  dplyr::select(state, starts_with('dimen')) %>% 
  setNames(c(names(.) %>% str_remove('dimen_')))
# get_str(dim_scores)

# Polygons for states
states <- readRDS('preso/data/state_polygons.rds')
states <- ms_simplify(states)

# Combine dim scores with state key to get fips
map_dat <- left_join(
  dim_scores, 
  select(state_key, state, fips = state_code)
) %>%
  left_join(states) %>% 
  select(state:name, geometry) %>% 
  mutate(across(where(is.numeric), ~ round(.x, 2))) %>% 
  st_as_sf()

# Function to make each dimension map individually
get_leaflet <- function(map_dat, dimension) {
  
  # Two palettes, one reversed, so we can swap legend order
  pal1 <- colorNumeric(
    palette = rev(brewer.pal(n = 11, name = 'YlGn')),
    domain = map_dat[[dimension]],
    reverse = TRUE
  )
  pal2 <- colorNumeric(
    palette = rev(brewer.pal(n = 11, name = 'YlGn')),
    domain = map_dat[[dimension]]
  )

  # Create leaflet map
  leaflet(map_dat) %>%
    # addProviderTiles(providers$Stadia.AlidadeSmooth) %>% 
    addTiles() %>% 
    addPolygons(
      fillColor = ~pal1(map_dat[[dimension]]),
      color = 'black',
      weight = 1.5,
      fillOpacity = 0.8,
      popup = ~paste0(
        "<strong>State:</strong> ", map_dat$name, "<br>",
        "<strong>", str_to_title(dimension), ":</strong> ", map_dat[[dimension]]
      )
    ) %>%
    addLegend(
      pal = pal2,
      values = map_dat[[dimension]],
      title = str_to_title(dimension),
      position = "bottomright",
      labFormat = labelFormat(transform = \(x) sort(x, decreasing = TRUE)),
      opacity = 0.8
    ) %>%
    setView(lng = -98.583333, lat = 39.833333, zoom = 4)
}
```

### Economics

```{r}
map_economics <- get_leaflet(map_dat, 'economics')
htmlwidgets::saveWidget(map_economics, file = "preso/maps/map_economics.html", selfcontained = TRUE)
```

<iframe 
  data-src="maps/map_economics.html" 
  width="100%" 
  height="600px" 
  frameborder="0">
</iframe>

### Environment

```{r}
#| include: false
map_environment <- get_leaflet(map_dat, 'environment')
htmlwidgets::saveWidget(map_environment, file = "preso/maps/map_environment.html", selfcontained = TRUE)
```

<iframe 
  data-src="maps/map_environment.html" 
  width="100%" 
  height="600px" 
  frameborder="0">
</iframe>

### Health

```{r}
#| include: false
map_health <- get_leaflet(map_dat, 'health')
htmlwidgets::saveWidget(map_health, file = "preso/maps/map_health.html", selfcontained = TRUE)
```

<iframe 
  data-src="maps/map_health.html" 
  width="100%" 
  height="600px" 
  frameborder="0">
</iframe>

### Production

```{r}
#| include: false
map_production <- get_leaflet(map_dat, 'production')
htmlwidgets::saveWidget(map_production, file = "preso/maps/map_production.html", selfcontained = TRUE)
```

<iframe 
  data-src="maps/map_production.html" 
  width="100%" 
  height="600px" 
  frameborder="0">
</iframe>

### Social

```{r}
#| include: false
map_social <- get_leaflet(map_dat, 'social')
htmlwidgets::saveWidget(map_social, file = "preso/maps/map_social.html", selfcontained = TRUE)
```

<iframe 
  data-src="maps/map_social.html" 
  width="100%" 
  height="600px" 
  frameborder="0">
</iframe>

:::

::: notes
-   Note: Why state level? So that we have some benchmarks to compare VT
    to. Allows us to use empirical methods.
-   **This is where I want qualitative data**
-   Environment: NV is low because of TreeMap data - scaled to 0.
-   Health: Mississippi is low - life expectancy, infant mortality,
    access to grocery
-   Arkansas: ?
:::

## Case Study: Indicator Correlations {.smaller}

Raw + min max scaling + geometric aggregation

::: panel-tabset
### Correlation Matrix

<iframe src="plots/correlation_plotly.html" width="100%" height="650">

</iframe>

### Influential Indicators

```{r}
#| class: centered
cor_table <- readRDS('preso/data/correlation_counts.rds')
cor_table %>% 
  get_reactable(
    fullWidth = FALSE,
    columns = list(
      Index = colDef(minWidth = 150),
      Indicator = colDef(minWidth = 150)
    )
  )
```
:::

::: notes
-   Highly correlating indicators from different dimensions are a
    problem (double counting)
-   Negative correlations within same dimension means measuring
    different things
-   Note: social dimension has strong positive AND negative correlations
-   Influential indicators: Most track with GDP and pop, social
    connectedness is pretty high (social associations, disconnected
    youth, single parent households)
-   TRANSITION TO VALIDATION
:::

## Case Study: Validation by Cronbach {.smaller}

Raw + min max scaling + geometric aggregation

::: {.columns .v-center-container}
::: {.column width = '40%'}

-   Cronbach's Alpha is a measure of internal reliability or consistency
    [@cronbach1951CoefficientAlphaInternal]
-   Arbitrary guideline of 0.7 to validate a measurement tool
    [@taber2018UseCronbachAlpha]
    
$$\alpha=\frac{n}{n-1}\left( 1-\frac{\sum_{i}^{V_i}}{V_t} \right)$$

Where $n$ is the number of items, $V_t$ is the variance of item $i$, and $V_t$ is the variance of all items

-   It is not supposed to be negative.
:::

::: {.column width = '60%'}

```{r}
#| class: centered
cronbachs <- readRDS('preso/data/cronbach_dimensions.rds')
get_reactable(
  cronbachs,
  fullWidth = FALSE,
  searchable = FALSE,
  filterable = FALSE
)
```

:::

::::

::: notes
-   Warning: Unconventional use of Cronbach, and it is fraught at best
-   Context for Cronbach: not necessarily what we want, just one way to
    show consistency within dimension.
-   Might be okay if dimension is scattered
-   Tau equivalence - assume equal loadings, but can have unequal
    variance
-   Split half reliability - average of correlations between subscales,
    all combinations
:::

## Case Study: Validation by Regression {.smaller}

Raw + min max scaling + geometric aggregation

:::::: panel-tabset
### Food Insecurity

Food Insecurity Index (UW Population Health Institute 2024)

```{r}
#| label: val1_food_insecurity
#| include: false
source('dev/get_stargazer.R')
dat <- readRDS('data/metrics_df_with_vals_and_covars.rds')
lm1 <- lm(
  foodInsecurity ~ economics + environment + health + production + social,
  data = dat
)
get_stargazer(
  lm1, 
  dep_var = 'Food Insecurity Index', 
  type = 'html', 
  out = 'preso/data/val1_food_insecurity.html',
  single_row = FALSE
)
```

::: flex-container
<iframe src="data/val1_food_insecurity.html" width="100%" height="100%" style="border: none;">

</iframe>
:::

### Life Expectancy

Life Expectancy (UW Population Health Institute 2024)

```{r}
#| label: val2_life_exp
#| include: false
lm2 <- lm(
  lifeExpectancy ~ economics + environment + health + production + social,
  data = dat
)
life_exp_vcov <- vcovHC(lm2, type = 'HC3')
get_stargazer(
  lm2, 
  dep_var = 'Life Expectancy', 
  robust = TRUE,
  type = 'html',
  out = 'preso/data/val2.html',
  single_row = FALSE
)
```

::: flex-container
<iframe src="data/val2.html" width="100%" height="100%" style="border: none;">

</iframe>
:::

### Food Environment Index

Food Environment Index (UW Population Health Institute 2024)

::: columns
::: {.column width = '30%'}

```{r}
ml_out <- readRDS('preso/data/ml_out.rds')
```

**Random Forest Regression**

Tuning Parameters:

-   Mtry = `r ml_out$rf_best_tune[1]`
-   Split Rule = `r ml_out$rf_best_tune[2]`
-   Min Node Size = `r ml_out$rf_best_tune[3]`

Performance:

-   RMSE = `r ml_out$rf_performance[1]`
-   R\^2 = `r ml_out$rf_performance[2]`
-   MAE = `r ml_out$rf_performance[3]`
:::

::: {.column width = '70%'}

```{r}
#| fig-align: center
plotly::ggplotly(
 ml_out$rf_imp_plot,
 width = 600,
 height = 400,
 tooltip = 'text'
)
```
::::::

::::

:::::

::: notes
-   Food Environment Index: 0 (worst) 10 (best). Distance to grocery,
    cost of health diet.
-   RF Importance: difference (MSE) between accuracy with and without
    feature, averaged across all trees, normalized by standard error
:::

## Case Study: Validation by PCA {.smaller}

::: columns
::: {.column width = '30%'}

-   Principal Components Analysis is a dimension reduction method
-   Characterize variance of many variables using smaller set of
    components
-   Guideline: loadings \> 0.32 are meaningful [@tabachnick2019]
-   Key to loadings:
    -   x \< 0.2 \~ ' '
    -   x \< 0.32 \~ '.'
    -   x \>= 0.32 \~ x
-   @jacobi2020NewUnderstandingEvaluation use PCA to validate dimensions, but still have indicators cross-loading or loading onto no components

:::

::: {.column width = '70%'}

```{r}
pca_tables <- readRDS('preso/data/pca_tables.rds')

get_pca_table <- function(table) {
  table %>% 
    setNames(c(stringr::str_to_title(
      names(.)) %>% 
        str_replace('Rc', 'RC'))
      ) %>% 
    get_reactable(
      pagination = FALSE,
      defaultPageSize = 50,
      showPageSizeOptions = FALSE,
      fullWidth = TRUE,
      defaultColDef = colDef(minWidth = 50),
      columns = list(
        Indicator = colDef(minWidth = 150),
        Dimension = colDef(minWidth = 125)
      )
    )  
}

get_pca_table(pca_tables$Promax)
```

:::

::::

::: notes
-   PA: randomize rows, do PCA. Keep PCs that explain significantly more
    variance than expected by chance
-   MAP: get average squared partial correlations for each PC. Keep PCs
    that lead to lowest average squared partial correlation
-   VSS: compare fit of simplified model to original correlations. VSS =
    1-sumsquares(r\*)/sumsquares(r). Peaks at optimal (most
    interpretable) number of factors.
-   Promax is best interpretation, but not great
-   Loadings: correlation coefficients between variables and components
-   Eigenvalue (ss loadings): varaince explained by component
-   Communality (h2): proportion of common variance present in variable
-   Uniqueness (u2): unique variable for each var (1-h2)
-   Complexity (com): how well it reflects a construct (1 for 1, loading
    evenly on 2 is 2)
:::

# 3. Uncertainty and Sensitivity {.centered-section}

## Uncertainty: Dimensions {.smaller}

::: columns
::: {.column width = '40%'}

-   Sample from uncertain inputs
    [@oecdHandbookConstructingComposite2008]
    -   Transformations (3)
    -   Rescaling methods (3)
    -   Aggregation methods (2)
    -   Leave out one indicator (39)
    -   = 702 combinations
-   Higher ranks are desirable
-   Some dimensions are quite unstable (Economics)
-   Some are quite stable (Health)

:::

::: {.column width = '60%'}

::: panel-tabset
### Economics

Distribution for Vermont

```{r}
#| fig-align: center
#| fig-height: 6
#| fig-width: 8
dim_sens_plots <- readRDS('preso/plots/dimension_sensitivity_plots.rds')
dim_sens_plots$economics
```

### Environment

Distribution for Vermont

```{r}
#| fig-align: center
#| fig-height: 6
#| fig-width: 8
dim_sens_plots$environment
```

### Health

Distribution for Vermont

```{r}
#| fig-align: center
#| fig-height: 6
#| fig-width: 8
dim_sens_plots$health
```

### Production

Distribution for Vermont

```{r}
#| fig-align: center
#| fig-height: 6
#| fig-width: 8
dim_sens_plots$production
```

### Social

Distribution for Vermont

```{r}
#| fig-align: center
#| fig-height: 6
#| fig-width: 8
dim_sens_plots$social
```
:::

:::

::::

## Sensitivity: Indicators {.smaller}

::: columns
::: {.column width = '30%'}

-   Steps:
    1.  Run all 18 methods without the indicator
    2.  Run all 18 methods with the indicator
    3.  Calculate average change in VT dimension rank
-   Shows how influential an indicator is on Vermont dimension scores

:::

::: {.column width = '70%'}

::: panel-tabset
### Economics

```{r}
#| fig-align: center
#| fig-width: 8
#| fig-height: 6
get_plotly <- function(plot) {
  ggplotly(
    plot,
    width = 700,
    height = 500,
    tooltip = 'text'
  )
}
ind_inf_plots <- readRDS('preso/plots/ind_influence_plots.rds')
get_plotly(ind_inf_plots$economics)
```

### Environment

```{r}
#| fig-align: center
#| fig-width: 8
#| fig-height: 6
get_plotly(ind_inf_plots$environment)
```

### Health

```{r}
#| fig-align: center
#| fig-width: 8
#| fig-height: 6
get_plotly(ind_inf_plots$health)
```

### Production

```{r}
#| fig-align: center
#| fig-width: 8
#| fig-height: 6
get_plotly(ind_inf_plots$production)
```

### Social

```{r}
#| fig-align: center
#| fig-width: 8
#| fig-height: 6
get_plotly(ind_inf_plots$social)
```
:::

:::

::::

::: notes
-   This is VT centric.
-   Could also see how each indicator changes all states on average
:::

## Conclusions {.smaller}

::: columns
::: {.column width = '60%'}

-   Findings:
    -   Gaps in secondary data
    -   Framework complexity and coherence
    -   Stability and sensitivity
    -   Influential indicators
-   Looking ahead:
    -   Find more info on metrics and analysis at the [Sustainability Metrics methods website](https://fsrc.w3.uvm.edu/sustainability_metrics/pages/home.html)
    -   Share your thoughts on:
        -   Quality and relevance of secondary data sources
        -   Other secondary sources to fill in gaps
        -   Framework methodology and how to represent your findings
    -   Sustainability Metrics repository is approved!

Thank you!
:::

::: {.column width = '40%' .center}
![](plots/spiders_1.png){width="80%"}
![](plots/spiders_2.png){width="80%"}

:::

::::

::: notes

-   Gaps:
    -   Soil health, carbon stocks, water quality and quantity
    -   Food distribution, loss, and waste
    -   Diversity of farm types, production diversity
    -   Dietary quality and nutrition
    -   Social dimension
    -   Others: NASS representativeness, updates (TreeMap)
-   Complexity and coherence:
    -   Cronbach: Some are coherent (health, and lesser extent economics
        and environment)
    -   Is this important to us? What does this mean for social
        dimension?
-   Sensitivity:
    -   Some dimensions stable (health)
    -   Others ambiguous (economics)
    -   Metric counts: fewer means risk of poor fit
    -   Diagnostic for indicator influence (production species
        diversity)
-   Metric counts: fewer increases risks?
-   Influential indicators:
    -   Carbon fluxes (10 interactions)
    -   Access to care, value added market (6)
    -   Operations diversification, phyiscal health, production
        quantities (5)
    -   More about GDP? Need to deal with this
    -   Social connectedness (5)
    -   From indicator sensitivity: social connectedness and production
        diversity
        
:::

## Directions for Discussion

-   How well do these data represent the system? What should be changed
    or added?
-   How should we assign values to metrics and indicators?
-   What are fair and interpretable methods of transformations and
    aggregation?
-   Where and how should we incorporate qualitative data?
-   What does this mean for shaping the next RFP?

## References
