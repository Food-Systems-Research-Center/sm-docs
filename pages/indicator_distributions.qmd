---
title: "Indicator Distributions"
format:
  html:
    fig-dpi: 200
warnings: false
---

```{r}
#| label: prep
#| echo: false
pacman::p_load(
  dplyr,
  conflicted,
  purrr,
  psych,
  tibble,
  reactable,
  ggplot2,
  ggpubr,
  stringr
)
pacman::p_load_gh('ChrisDonovan307/projecter')
source('dev/get_reactable.R')
source('dev/get_indicator_distributions.R')
conflicts_prefer(
  dplyr::select(),
  dplyr::filter(),
  dplyr::summarize(),
  .quiet = TRUE
)
```

Now that our metrics have been aggregated into indicators, we can observe the univariate distributions of the indicators themselves. We will do this for all six sets of transformations.

# Summary

Below are counts of skewed indicator distributions for each transformation. 

```{r}
#| label: summary
#| output: false

# Load scores data for all transformations
scores <- readRDS('data/state_score_iterations.rds')
get_str(scores)

# Rearrange data to make a single DF as table
out <- map_vec(scores, ~ {
  .x[['indicator_scores']] %>% 
    dplyr::filter(str_detect(state, 'US_|NE_', negate = TRUE)) %>% 
    dplyr::select(-state) %>% 
    psych::describe() %>% 
    dplyr::select(skew) %>% 
    dplyr::filter(abs(skew) > 2) %>% 
    nrow()
}) %>% 
  as.data.frame() %>% 
  tibble::rownames_to_column() %>% 
  setNames(c('Transformation', 'Indicators with Skew > 2')) %>% 
  arrange(Transformation)
out
```


```{r}
#| label: reactable
#| class: centered
get_reactable(
  out, 
  fullWidth = FALSE,
  searchable = FALSE,
  defaultPageSize = 20,
  defaultColDef = colDef(
    minWidth = 200
  )
)
```
# Raw 

## Rank Arithmetic

```{r}
#| fig-height: 15
#| fig-width: 10
#| fig-align: center
get_indicator_distributions(scores, 'raw_rank_arithmetic')
```

## Rank Geometric

```{r}
#| fig-height: 15
#| fig-width: 10
#| fig-align: center
get_indicator_distributions(scores, 'raw_rank_geometric')
```

## Min Max Arithmetic

```{r}
#| fig-height: 15
#| fig-width: 10
#| fig-align: center
get_indicator_distributions(scores, 'raw_minmax_arithmetic')
```

## Min Max Geometric

```{r}
#| fig-height: 15
#| fig-width: 10
#| fig-align: center
get_indicator_distributions(scores, 'raw_minmax_geometric')
```

## Z-Score Arithmetic

```{r}
#| fig-height: 15
#| fig-width: 10
#| fig-align: center
get_indicator_distributions(scores, 'raw_zscore_arithmetic')
```

## Z-Score Geometric

```{r}
#| fig-height: 15
#| fig-width: 10
#| fig-align: center
get_indicator_distributions(scores, 'raw_zscore_geometric')
```

# Winsor

## Rank Arithmetic

```{r}
#| fig-height: 15
#| fig-width: 10
#| fig-align: center
get_indicator_distributions(scores, 'winsor_rank_arithmetic')
```

## Rank Geometric

```{r}
#| fig-height: 15
#| fig-width: 10
#| fig-align: center
get_indicator_distributions(scores, 'winsor_rank_geometric')
```

## Min Max Arithmetic

```{r}
#| fig-height: 15
#| fig-width: 10
#| fig-align: center
get_indicator_distributions(scores, 'winsor_minmax_arithmetic')
```

## Min Max Geometric

```{r}
#| fig-height: 15
#| fig-width: 10
#| fig-align: center
get_indicator_distributions(scores, 'winsor_minmax_geometric')
```

## Z-Score Arithmetic

```{r}
#| fig-height: 15
#| fig-width: 10
#| fig-align: center
get_indicator_distributions(scores, 'winsor_zscore_arithmetic')
```

## Z-Score Geometric

```{r}
#| fig-height: 15
#| fig-width: 10
#| fig-align: center
get_indicator_distributions(scores, 'winsor_zscore_geometric')
```

# Box Cox

## Rank Arithmetic

```{r}
#| fig-height: 15
#| fig-width: 10
#| fig-align: center
get_indicator_distributions(scores, 'boxcox_rank_arithmetic')
```

## Rank Geometric

```{r}
#| fig-height: 15
#| fig-width: 10
#| fig-align: center
get_indicator_distributions(scores, 'boxcox_rank_geometric')
```

## Min Max Arithmetic

```{r}
#| fig-height: 15
#| fig-width: 10
#| fig-align: center
get_indicator_distributions(scores, 'boxcox_minmax_arithmetic')
```

## Min Max Geometric

```{r}
#| fig-height: 15
#| fig-width: 10
#| fig-align: center
get_indicator_distributions(scores, 'boxcox_minmax_geometric')
```

## Z-Score Arithmetic

```{r}
#| fig-height: 15
#| fig-width: 10
#| fig-align: center
get_indicator_distributions(scores, 'boxcox_zscore_arithmetic')
```

## Z-Score Geometric

```{r}
#| fig-height: 15
#| fig-width: 10
#| fig-align: center
get_indicator_distributions(scores, 'boxcox_zscore_geometric')
```