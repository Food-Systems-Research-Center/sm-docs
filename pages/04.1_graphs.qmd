---
title: Exploratory Graphs
---

## Introduction

::: {.callout-note title='Connecticut Planning Regions' collapse='true'}
The state of Connecticut has operated under an alternative to the traditional county system known as the Councils of Governments since 1960. The U.S. Census Bureau has historically released figures on the county level. In 2022, the Census Bureau formally recognized the state's nine governing regions. Unfortunately as it relates to data management, this means that data from before and after 2022 are challenging to compare at the county level. Some resources for understanding the shift can be found at the [CT Data Collaborative](https://www.ctdata.org/blog/geographic-resources-for-connecticuts-new-county-equivalent-geography).
:::

This is a first pass at exploratory graphs with the metrics collected so far. We will explore time series trends, marginal distributions, and some bivariate plots. More exploration into correlation will be in the [Correlations](04.2_correlations.qmd) page.

## Time Series

Let's explore metrics that have 5 or more time points. First we will clean them up and give them cleaner names.

```{r}
#| label: wrangle_ts_data
#| warning: false

pacman::p_load(
  dplyr,
  ggplot2,
  plotly,
  purrr,
  RColorBrewer,
  stringr
)

source('dev/filter_fips.R')
dat <- readRDS('data/sm_data.rds')[['metrics']]
fips_key <- readRDS('data/sm_data.rds')[['fips_key']]

## Select metrics
# Start with variables with >= 5 time points
ts_vars <- dat %>% 
  group_by(variable_name) %>% 
  summarize(n_years = length(unique(year))) %>% 
  filter(n_years >= 5) %>% 
  pull(variable_name)

# Select a subset of them
ts_vars <- str_subset(ts_vars, 'child|overall|^wic|^women')

# Add a clean name for graphs
ts_vars <- data.frame(
  variable = ts_vars,
  yaxis = c(
    'Insecurity Rate',
    'Insecurity Rate',
    'Coverage Rate',
    'Eligibility Rate',
    'Percent',
    'Percent'
  ),
  title = c(
    'Child Food Insecurity Rate',
    'Overall Food Insecurity Rate',
    'WIC Coverage Rate',
    'WIC Eligibility Rate',
    'Women\'s Earnings as % of Men, Farming',
    'Women\'s Earnings as % of Men, Food Service'
  )
)

## Keep only New England states, add state names from fips_key df
dat <- dat %>% 
  filter_fips(scope = 'states') %>% 
  left_join(fips_key, by = 'fips')
```

Now we can plot a series of six metrics for which we have data for five or more years at the state level. Hover over the joints to see specific values for each state. You can also double click on a state to only show that state on all six graphs.

```{r}
#| label: time_series
#| fig-cap: Interactive time series plots
#| warning: false

# Mapping over our time series variables to make a list of plots
plots <- map(1:nrow(ts_vars), \(row) {
  sub_plot <- dat %>% 
    filter(variable_name == ts_vars$variable[row], str_length(fips) == 2) %>% 
    ggplot(aes(
      x = year, 
      y = value, 
      group = state_name, 
      color = state_name,
      text = paste0(
        'State: ', state_name, '\n',
        'Value: ', round(value, 3)
      )
    )) +
    geom_line(
      lwd = 1,
      alpha = 0.6
    ) +
    theme_bw() +
    scale_y_continuous(n.breaks = 10) +
    labs(
      x = 'Year',
      y = ts_vars$yaxis[row],
      color = 'State'
    ) + 
    scale_color_manual(values = brewer.pal(6, 'Dark2'))
  
  ggplotly(
    sub_plot, 
    tooltip = 'text',
    width = 500,
    height = 500
  ) %>% 
  add_annotations(
    text = ~unique(ts_vars$title[row]),
    x = -0.05,
    y = 1.175,
    yref = "paper",
    xref = "paper",
    xanchor = "left",
    yanchor = "top",
    showarrow = FALSE,
    font = list(size = 15)
  )
})

# Arrange the plots together in one frame
subplot(
  plots[[1]],
  style(plots[[2]], showlegend = FALSE),
  style(plots[[3]], showlegend = FALSE),
  style(plots[[4]], showlegend = FALSE),
  style(plots[[5]], showlegend = FALSE),
  style(plots[[6]], showlegend = FALSE),
  nrows = 3,
  heights = c(0.32, 0.36, 0.32),
  margin = c(0.05, 0.06, 0.05, 0.06),
  titleY = TRUE
) %>% 
  plotly::layout(
    autosize = FALSE,
    margin = list(l = 25, r = 10, t = 75, b = 75),
    width = 800,
    height= 600
  )
```

There is certainly more to come in terms of time series data. 

## Distributions

Taking an exploratory look at the distributions of our variables at the county level. We are only using the latest years available for each metric. Note that y-axes are indepednent 


```{r}
#| label: distributions
#| fig-cap: Distributions of all metrics at the county level.
#| fig-height: 25
#| fig-width: 10
#| warning: false
#| fig-align: center
#| code-annotations: select

pacman::p_load(
  dplyr,
  purrr,
  ggplot2,
  rlang,
  ggpubr,
  tidyr
)

source('dev/data_pipeline_functions.R')
source('dev/filter_fips.R')
dat <- readRDS('data/sm_data.rds')[['metrics']]

# Get names of all vars
vars <- dat$variable_name %>% unique

# DF with only final years of all vars, states only, CT governing regions
dat_latest <- dat %>% 
  filter_fips(scope = 'new') %>% 
  mutate(
    variable_name = str_sub(variable_name, end = 60),
    value = as.numeric(value)
  ) %>%
  get_latest_year() %>%
  unique() %>% 
  pivot_wider(
    id_cols = fips,
    names_from = 'variable_name',
    values_from = 'value'
  )

plots <- map(names(dat_latest)[-1], \(var){
  dat_latest %>% 
    ggplot(aes(x = !!sym(var))) + 
    geom_density(
      fill = 'lightblue',
      color = 'royalblue',
      alpha = 0.5
    ) +
    theme_classic() +
    theme(plot.margin = unit(c(rep(0.5, 4)), 'cm'))
})

ggarrange(
  plotlist = plots,
  ncol = 4,
  nrow = 17
)
```

Here are a few things that stick out so far.

* Mean producer age per county centers around 58 years. It would be worth diving more into the producer age demographic pyramid to see what this might look like moving forward.
* There are disproportionately fewer female producers as compared to male, and women generally earn less than men in both "farming, fishing, and forestry", as well as "food service and preparation". (Some of these axis titles are too long and incomprehensible currently - it is on the to do list)
* We can get a decent idea that while there are some normal-ish curves, like child food insecurity rate, snapspth, education_prop_bs, etc., many of the distributions better resemble power curves (total chemical expenses, total sales, really anything with totals). 

## Bivariate Plots

Let's take a closer look at the relationships between a selection of metrics. Bivariate scatter plots with loess smoother lines are shown in the bottom half. The top half shows Pearson correlation coefficients that are colored by the value of the coefficient. Stars are shown when the correlation is significant. The diagonal shows the marginal distributions of each of the variables.

```{r}
#| label: bivariate_plots
#| fig-cap: Bivariate scatter plots and correlations for selected metrics.
#| warning: false
#| fig-height: 9
#| fig-width: 9
#| fig-align: center

pacman::p_load(
  GGally
)

# Neat function for mapping colors to ggpairs plots
# https://stackoverflow.com/questions/45873483/ggpairs-plot-with-heatmap-of-correlation-values
map_colors <- function(data,
                       mapping,
                       method = "p",
                       use = "pairwise",
                       ...) {
  # grab data
  x <- eval_data_col(data, mapping$x)
  y <- eval_data_col(data, mapping$y)
  
  # calculate correlation
  corr <- cor(x, y, method = method, use = use)
  colFn <- colorRampPalette(c("blue", "white", "red"), interpolate = 'spline')
  fill <- colFn(100)[findInterval(corr, seq(-1, 1, length = 100))]
  
  # correlation plot
  ggally_cor(data = data, mapping = mapping, color = 'black', ...) +
    theme_void() +
    theme(panel.background = element_rect(fill = fill))
}

lower_function <- function(data, mapping, ...) {
  ggplot(data = data, mapping = mapping) +
    geom_point(alpha = 0.5) +
    geom_smooth(color = "blue", fill = "grey", ...) +
    theme_bw()
}

dat_latest %>%
  select(
    rent = median_rent_2022,
    rent_burden = median_rent_as_perc_of_household_income_2022,
    vacancy = vacancy_rate_2022,
    edu = education_prop_bs_2022,
    pay_equity = womens_earnings_as_perc_of_men_farming_fishing_forestry_2023,
    age = mean_producer_age_2022,
    groc = grocpth_2016,
    wic = wicspth_2016,
    snap = snapspth_2017,
    insecurity = overall_food_insecurity_rate_2021
  ) %>%
  ggpairs(
    upper = list(continuous = map_colors),
    lower = list(continuous = lower_function),
    axisLabels = 'show'
  )
```
There is lots to see here. The thing that sticks out to me is how tightly correlated all the metrics related to income and poverty are (wic, snap, food insecurity, median rent, and education). 